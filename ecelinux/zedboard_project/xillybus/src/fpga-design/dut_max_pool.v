// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_max_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        M,
        I
);

parameter    ap_ST_st1_fsm_0 = 11'b1;
parameter    ap_ST_st2_fsm_1 = 11'b10;
parameter    ap_ST_st3_fsm_2 = 11'b100;
parameter    ap_ST_st4_fsm_3 = 11'b1000;
parameter    ap_ST_st5_fsm_4 = 11'b10000;
parameter    ap_ST_st6_fsm_5 = 11'b100000;
parameter    ap_ST_st7_fsm_6 = 11'b1000000;
parameter    ap_ST_st8_fsm_7 = 11'b10000000;
parameter    ap_ST_st9_fsm_8 = 11'b100000000;
parameter    ap_ST_st10_fsm_9 = 11'b1000000000;
parameter    ap_ST_st11_fsm_10 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv13_1440 = 13'b1010001000000;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_1 = 2'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_r_address0;
output   input_r_ce0;
input  [0:0] input_r_q0;
output  [12:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [0:0] output_r_d0;
input  [6:0] M;
input  [5:0] I;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[12:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[0:0] output_r_d0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_28;
wire   [3:0] O_fu_207_p4;
reg   [3:0] O_reg_431;
wire   [10:0] O_cast10_cast1_fu_217_p1;
reg   [10:0] O_cast10_cast1_reg_437;
wire   [7:0] O_cast10_cast_fu_221_p1;
reg   [7:0] O_cast10_cast_reg_442;
wire   [12:0] i_2_fu_231_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_68;
wire   [8:0] I_cast2_fu_242_p1;
reg   [8:0] I_cast2_reg_455;
wire   [0:0] exitcond3_fu_225_p2;
wire   [12:0] I_cast_fu_245_p1;
reg   [12:0] I_cast_reg_460;
wire   [8:0] next_mul_fu_248_p2;
reg   [8:0] next_mul_reg_465;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_86;
wire   [5:0] m_2_fu_266_p2;
reg   [5:0] m_2_reg_473;
wire   [7:0] tmp_2_fu_272_p2;
reg   [7:0] tmp_2_reg_478;
wire   [0:0] tmp_9_fu_261_p2;
wire   [10:0] x_cast6_fu_277_p1;
reg   [10:0] x_cast6_reg_483;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_103;
wire   [3:0] x_3_fu_286_p2;
reg   [3:0] x_3_reg_491;
wire   [12:0] tmp_5_cast_fu_298_p1;
reg   [12:0] tmp_5_cast_reg_496;
wire   [0:0] exitcond4_fu_281_p2;
wire   [3:0] y_3_fu_311_p2;
reg   [3:0] y_3_reg_504;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_119;
wire   [10:0] tmp7_fu_326_p2;
reg   [10:0] tmp7_reg_509;
wire   [0:0] exitcond2_fu_306_p2;
wire   [10:0] o_index_fu_331_p2;
reg   [10:0] o_index_reg_514;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_133;
wire   [8:0] tmp_6_cast_fu_341_p1;
reg   [8:0] tmp_6_cast_reg_519;
wire   [12:0] c_cast4_fu_345_p1;
reg   [12:0] c_cast4_reg_524;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_144;
wire   [1:0] c_2_fu_355_p2;
reg   [1:0] c_2_reg_532;
wire   [1:0] r_1_fu_375_p2;
reg   [1:0] r_1_reg_540;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_155;
wire   [8:0] tmp8_fu_387_p2;
reg   [8:0] tmp8_reg_545;
wire   [0:0] exitcond_fu_369_p2;
wire   [12:0] tmp9_fu_395_p2;
reg   [12:0] tmp9_reg_550;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_169;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_178;
wire   [0:0] p_max_1_fu_414_p2;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_187;
reg   [12:0] i_reg_103;
reg   [5:0] m_reg_114;
reg   [8:0] phi_mul_reg_125;
reg   [3:0] x_reg_137;
reg   [3:0] y_reg_148;
wire   [0:0] exitcond1_fu_349_p2;
reg   [0:0] max_reg_160;
reg   [1:0] c_reg_173;
reg   [0:0] max_1_reg_184;
reg   [1:0] r_reg_196;
wire   [63:0] tmp_s_fu_237_p1;
wire   [63:0] tmp_7_fu_361_p1;
wire   [63:0] tmp_1_fu_409_p1;
wire   [6:0] m_cast_fu_257_p1;
wire   [3:0] tmp_2_fu_272_p0;
wire   [5:0] tmp_2_fu_272_p1;
wire   [3:0] tmp_8_fu_292_p2;
wire   [7:0] y_cast5_fu_302_p1;
wire   [7:0] tmp_fu_317_p2;
wire   [7:0] tmp7_fu_326_p0;
wire   [3:0] tmp7_fu_326_p1;
wire   [3:0] tmp_10_fu_335_p2;
wire   [8:0] r_cast3_fu_365_p1;
wire   [8:0] tmp1_fu_381_p2;
wire   [5:0] tmp9_fu_395_p0;
wire   [8:0] tmp9_fu_395_p1;
wire   [12:0] tmp2_fu_400_p2;
wire   [12:0] i_index_fu_404_p2;
reg   [10:0] ap_NS_fsm;
wire   [10:0] tmp7_fu_326_p00;
wire   [12:0] tmp9_fu_395_p10;
wire   [7:0] tmp_2_fu_272_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond_fu_369_p2))) begin
        c_reg_173 <= c_2_reg_532;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        c_reg_173 <= ap_const_lv2_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_225_p2 == 1'b0))) begin
        i_reg_103 <= i_2_fu_231_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_103 <= ap_const_lv13_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_281_p2))) begin
        m_reg_114 <= m_2_reg_473;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_225_p2 == 1'b0))) begin
        m_reg_114 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond1_fu_349_p2))) begin
        max_1_reg_184 <= max_reg_160;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        max_1_reg_184 <= p_max_1_fu_414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == exitcond_fu_369_p2))) begin
        max_reg_160 <= max_1_reg_184;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        max_reg_160 <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond4_fu_281_p2))) begin
        phi_mul_reg_125 <= next_mul_reg_465;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_225_p2 == 1'b0))) begin
        phi_mul_reg_125 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == exitcond1_fu_349_p2))) begin
        r_reg_196 <= ap_const_lv2_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        r_reg_196 <= r_1_reg_540;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~(1'b0 == exitcond2_fu_306_p2))) begin
        x_reg_137 <= x_3_reg_491;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_9_fu_261_p2))) begin
        x_reg_137 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond4_fu_281_p2))) begin
        y_reg_148 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond1_fu_349_p2))) begin
        y_reg_148 <= y_3_reg_504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond3_fu_225_p2 == 1'b0))) begin
        I_cast2_reg_455[5 : 0] <= I_cast2_fu_242_p1[5 : 0];
        I_cast_reg_460[5 : 0] <= I_cast_fu_245_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        O_cast10_cast1_reg_437[3 : 0] <= O_cast10_cast1_fu_217_p1[3 : 0];
        O_cast10_cast_reg_442[3 : 0] <= O_cast10_cast_fu_221_p1[3 : 0];
        O_reg_431 <= {{I[ap_const_lv32_4 : ap_const_lv32_1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        c_2_reg_532 <= c_2_fu_355_p2;
        c_cast4_reg_524[1 : 0] <= c_cast4_fu_345_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        m_2_reg_473 <= m_2_fu_266_p2;
        next_mul_reg_465 <= next_mul_fu_248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        o_index_reg_514 <= o_index_fu_331_p2;
        tmp_6_cast_reg_519[3 : 1] <= tmp_6_cast_fu_341_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        r_1_reg_540 <= r_1_fu_375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond2_fu_306_p2))) begin
        tmp7_reg_509 <= tmp7_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & (1'b0 == exitcond_fu_369_p2))) begin
        tmp8_reg_545 <= tmp8_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp9_reg_550 <= tmp9_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_9_fu_261_p2))) begin
        tmp_2_reg_478 <= tmp_2_fu_272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond4_fu_281_p2))) begin
        tmp_5_cast_reg_496[3 : 1] <= tmp_5_cast_fu_298_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        x_3_reg_491 <= x_3_fu_286_p2;
        x_cast6_reg_483[3 : 0] <= x_cast6_fu_277_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        y_3_reg_504 <= y_3_fu_311_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_9_fu_261_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_9_fu_261_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_28) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_68) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_86) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_103) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_119) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_133) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_144) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_155) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_169) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        output_r_address0 = tmp_7_fu_361_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_r_address0 = tmp_s_fu_237_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        output_r_d0 = max_reg_160;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_r_d0 = 1'b0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond3_fu_225_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == exitcond1_fu_349_p2)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond3_fu_225_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == tmp_9_fu_261_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond4_fu_281_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if ((1'b0 == exitcond2_fu_306_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == exitcond1_fu_349_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            if ((1'b0 == exitcond_fu_369_p2)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign I_cast2_fu_242_p1 = I;

assign I_cast_fu_245_p1 = I;

assign O_cast10_cast1_fu_217_p1 = O_fu_207_p4;

assign O_cast10_cast_fu_221_p1 = O_fu_207_p4;

assign O_fu_207_p4 = {{I[ap_const_lv32_4 : ap_const_lv32_1]}};

always @ (*) begin
    ap_sig_103 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_119 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_133 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_144 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_155 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_169 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_28 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_68 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_86 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign c_2_fu_355_p2 = (c_reg_173 + ap_const_lv2_1);

assign c_cast4_fu_345_p1 = c_reg_173;

assign exitcond1_fu_349_p2 = ((c_reg_173 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign exitcond2_fu_306_p2 = ((y_reg_148 == O_reg_431) ? 1'b1 : 1'b0);

assign exitcond3_fu_225_p2 = ((i_reg_103 == ap_const_lv13_1440) ? 1'b1 : 1'b0);

assign exitcond4_fu_281_p2 = ((x_reg_137 == O_reg_431) ? 1'b1 : 1'b0);

assign exitcond_fu_369_p2 = ((r_reg_196 == ap_const_lv2_2) ? 1'b1 : 1'b0);

assign i_2_fu_231_p2 = (i_reg_103 + ap_const_lv13_1);

assign i_index_fu_404_p2 = (c_cast4_reg_524 + tmp2_fu_400_p2);

assign input_r_address0 = tmp_1_fu_409_p1;

assign m_2_fu_266_p2 = (m_reg_114 + ap_const_lv6_1);

assign m_cast_fu_257_p1 = m_reg_114;

assign next_mul_fu_248_p2 = (phi_mul_reg_125 + I_cast2_reg_455);

assign o_index_fu_331_p2 = (tmp7_reg_509 + x_cast6_reg_483);

assign p_max_1_fu_414_p2 = (input_r_q0 | max_1_reg_184);

assign r_1_fu_375_p2 = (r_reg_196 + ap_const_lv2_1);

assign r_cast3_fu_365_p1 = r_reg_196;

assign tmp1_fu_381_p2 = (r_cast3_fu_365_p1 + phi_mul_reg_125);

assign tmp2_fu_400_p2 = (tmp9_reg_550 + tmp_5_cast_reg_496);

assign tmp7_fu_326_p0 = tmp7_fu_326_p00;

assign tmp7_fu_326_p00 = tmp_fu_317_p2;

assign tmp7_fu_326_p1 = O_cast10_cast1_reg_437;

assign tmp7_fu_326_p2 = (tmp7_fu_326_p0 * tmp7_fu_326_p1);

assign tmp8_fu_387_p2 = (tmp_6_cast_reg_519 + tmp1_fu_381_p2);

assign tmp9_fu_395_p0 = I_cast_reg_460;

assign tmp9_fu_395_p1 = tmp9_fu_395_p10;

assign tmp9_fu_395_p10 = tmp8_reg_545;

assign tmp9_fu_395_p2 = (tmp9_fu_395_p0 * tmp9_fu_395_p1);

assign tmp_10_fu_335_p2 = y_reg_148 << ap_const_lv4_1;

assign tmp_1_fu_409_p1 = i_index_fu_404_p2;

assign tmp_2_fu_272_p0 = O_cast10_cast_reg_442;

assign tmp_2_fu_272_p1 = tmp_2_fu_272_p10;

assign tmp_2_fu_272_p10 = m_reg_114;

assign tmp_2_fu_272_p2 = (tmp_2_fu_272_p0 * tmp_2_fu_272_p1);

assign tmp_5_cast_fu_298_p1 = tmp_8_fu_292_p2;

assign tmp_6_cast_fu_341_p1 = tmp_10_fu_335_p2;

assign tmp_7_fu_361_p1 = o_index_reg_514;

assign tmp_8_fu_292_p2 = x_reg_137 << ap_const_lv4_1;

assign tmp_9_fu_261_p2 = (($signed(m_cast_fu_257_p1) < $signed(M)) ? 1'b1 : 1'b0);

assign tmp_fu_317_p2 = (y_cast5_fu_302_p1 + tmp_2_reg_478);

assign tmp_s_fu_237_p1 = i_reg_103;

assign x_3_fu_286_p2 = (x_reg_137 + ap_const_lv4_1);

assign x_cast6_fu_277_p1 = x_reg_137;

assign y_3_fu_311_p2 = (y_reg_148 + ap_const_lv4_1);

assign y_cast5_fu_302_p1 = y_reg_148;

always @ (posedge ap_clk) begin
    O_cast10_cast1_reg_437[10:4] <= 7'b0000000;
    O_cast10_cast_reg_442[7:4] <= 4'b0000;
    I_cast2_reg_455[8:6] <= 3'b000;
    I_cast_reg_460[12:6] <= 7'b0000000;
    x_cast6_reg_483[10:4] <= 7'b0000000;
    tmp_5_cast_reg_496[0] <= 1'b0;
    tmp_5_cast_reg_496[12:4] <= 9'b000000000;
    tmp_6_cast_reg_519[0] <= 1'b0;
    tmp_6_cast_reg_519[8:4] <= 5'b00000;
    c_cast4_reg_524[12:2] <= 11'b00000000000;
end

endmodule //dut_max_pool
