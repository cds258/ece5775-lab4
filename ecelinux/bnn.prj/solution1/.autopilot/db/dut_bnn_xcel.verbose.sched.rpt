

================================================================
== Vivado HLS Report for 'dut_bnn_xcel'
================================================================
* Date:           Tue Oct 25 16:03:05 2022

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        bnn.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.34|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+----------+---------+----------+---------+
    |       Latency      |      Interval      | Pipeline|
    |   min   |    max   |   min   |    max   |   Type  |
    +---------+----------+---------+----------+---------+
    |  1876324|  13488000|  1876324|  13488000|   none  |
    +---------+----------+---------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  1709312|  1709312|      6677|          -|          -|   256|    no    |
        | + Loop 1.1  |     6656|     6656|        13|          -|          -|   512|    no    |
        |- Loop 2     |       18|       18|         2|          -|          -|     9|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 50
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / (!exitcond3)
	48  / (exitcond3)
16 --> 
	17  / (!exitcond2)
	29  / (exitcond2)
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	16  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	15  / true
48 --> 
	49  / true
49 --> 
	50  / (!exitcond)
50 --> 
	49  / true
* FSM state operations: 

 <State 1>: 2.76ns
ST_1: mem_conv1 [1/1] 0.00ns
:0  %mem_conv1 = alloca [5184 x i1], align 16

ST_1: mem_conv2 [1/1] 0.00ns
:1  %mem_conv2 = alloca [5184 x i1], align 16

ST_1: stg_53 [2/2] 2.76ns
:2  call fastcc void @dut_pad([5184 x i1]* %input_r, [5184 x i1]* %mem_conv1, i7 1, i6 16)


 <State 2>: 0.00ns
ST_2: stg_54 [1/2] 0.00ns
:2  call fastcc void @dut_pad([5184 x i1]* %input_r, [5184 x i1]* %mem_conv1, i7 1, i6 16)


 <State 3>: 2.76ns
ST_3: stg_55 [2/2] 2.76ns
:3  call fastcc void @dut_conv([5184 x i1]* %mem_conv1, [5184 x i1]* %mem_conv2, [5184 x i8]* @threshold1_V, i7 1, i7 16, i6 18, i1 false)


 <State 4>: 0.00ns
ST_4: stg_56 [1/2] 0.00ns
:3  call fastcc void @dut_conv([5184 x i1]* %mem_conv1, [5184 x i1]* %mem_conv2, [5184 x i8]* @threshold1_V, i7 1, i7 16, i6 18, i1 false)


 <State 5>: 1.04ns
ST_5: stg_57 [2/2] 1.04ns
:4  call fastcc void @dut_max_pool([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1, i7 16, i6 16)


 <State 6>: 0.00ns
ST_6: stg_58 [1/2] 0.00ns
:4  call fastcc void @dut_max_pool([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1, i7 16, i6 16)


 <State 7>: 2.76ns
ST_7: stg_59 [2/2] 2.76ns
:5  call fastcc void @dut_pad([5184 x i1]* %mem_conv1, [5184 x i1]* %mem_conv2, i7 16, i6 8)


 <State 8>: 0.00ns
ST_8: stg_60 [1/2] 0.00ns
:5  call fastcc void @dut_pad([5184 x i1]* %mem_conv1, [5184 x i1]* %mem_conv2, i7 16, i6 8)


 <State 9>: 2.76ns
ST_9: stg_61 [2/2] 2.76ns
:6  call fastcc void @dut_conv([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1, [5184 x i8]* @threshold2_V, i7 16, i7 32, i6 10, i1 true)


 <State 10>: 0.00ns
ST_10: stg_62 [1/2] 0.00ns
:6  call fastcc void @dut_conv([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1, [5184 x i8]* @threshold2_V, i7 16, i7 32, i6 10, i1 true)


 <State 11>: 1.04ns
ST_11: stg_63 [2/2] 1.04ns
:7  call fastcc void @dut_max_pool([5184 x i1]* %mem_conv1, [5184 x i1]* %mem_conv2, i7 32, i6 8)


 <State 12>: 0.00ns
ST_12: stg_64 [1/2] 0.00ns
:7  call fastcc void @dut_max_pool([5184 x i1]* %mem_conv1, [5184 x i1]* %mem_conv2, i7 32, i6 8)


 <State 13>: 0.00ns
ST_13: stg_65 [2/2] 0.00ns
:8  call fastcc void @dut_reshape([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1)


 <State 14>: 1.57ns
ST_14: stg_66 [1/2] 0.00ns
:8  call fastcc void @dut_reshape([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1)

ST_14: stg_67 [1/1] 1.57ns
:9  br label %1


 <State 15>: 3.60ns
ST_15: n_i [1/1] 0.00ns
:0  %n_i = phi i9 [ 0, %0 ], [ %n, %3 ]

ST_15: n_i_cast6 [1/1] 0.00ns
:1  %n_i_cast6 = zext i9 %n_i to i17

ST_15: empty [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_15: exitcond3 [1/1] 2.03ns
:3  %exitcond3 = icmp eq i9 %n_i, -256

ST_15: n [1/1] 1.84ns
:4  %n = add i9 %n_i, 1

ST_15: stg_73 [1/1] 1.57ns
:5  br i1 %exitcond3, label %dense.1.exit, label %.preheader.i

ST_15: stg_74 [2/2] 0.00ns
dense.1.exit:0  call fastcc void @dut_dense([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1)


 <State 16>: 5.70ns
ST_16: one_out_i [1/1] 0.00ns
.preheader.i:0  %one_out_i = phi float [ %one_out_3, %2 ], [ 0.000000e+00, %1 ]

ST_16: m_i [1/1] 0.00ns
.preheader.i:1  %m_i = phi i10 [ %m, %2 ], [ 0, %1 ]

ST_16: empty_33 [1/1] 0.00ns
.preheader.i:2  %empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)

ST_16: exitcond2 [1/1] 2.07ns
.preheader.i:3  %exitcond2 = icmp eq i10 %m_i, -512

ST_16: m [1/1] 1.84ns
.preheader.i:4  %m = add i10 %m_i, 1

ST_16: stg_80 [1/1] 0.00ns
.preheader.i:5  br i1 %exitcond2, label %3, label %2

ST_16: tmp_32 [1/1] 0.00ns
:0  %tmp_32 = trunc i10 %m_i to i9

ST_16: tmp_17_i [1/1] 0.00ns
:1  %tmp_17_i = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %tmp_32, i8 0)

ST_16: w_index [1/1] 2.08ns
:2  %w_index = add i17 %n_i_cast6, %tmp_17_i

ST_16: tmp_18_i [1/1] 0.00ns
:3  %tmp_18_i = zext i10 %m_i to i64

ST_16: mem_conv1_addr_1 [1/1] 0.00ns
:4  %mem_conv1_addr_1 = getelementptr [5184 x i1]* %mem_conv1, i64 0, i64 %tmp_18_i

ST_16: mem_conv1_load_1 [2/2] 2.71ns
:5  %mem_conv1_load_1 = load i1* %mem_conv1_addr_1, align 1

ST_16: tmp_19_i [1/1] 0.00ns
:6  %tmp_19_i = zext i17 %w_index to i64

ST_16: w_fc1_addr [1/1] 0.00ns
:7  %w_fc1_addr = getelementptr [131072 x i1]* @w_fc1, i64 0, i64 %tmp_19_i

ST_16: w_fc1_load [2/2] 2.39ns
:8  %w_fc1_load = load i1* %w_fc1_addr, align 1

ST_16: tmp_23_i [4/4] 5.70ns
:0  %tmp_23_i = fmul float %one_out_i, 2.000000e+00


 <State 17>: 4.08ns
ST_17: mem_conv1_load_1 [1/2] 2.71ns
:5  %mem_conv1_load_1 = load i1* %mem_conv1_addr_1, align 1

ST_17: w_fc1_load [1/2] 2.39ns
:8  %w_fc1_load = load i1* %w_fc1_addr, align 1

ST_17: tmp1 [1/1] 0.00ns (grouped into LUT with out node tmp_20_i)
:9  %tmp1 = xor i1 %w_fc1_load, true

ST_17: tmp_20_i [1/1] 1.37ns (out node of the LUT)
:10  %tmp_20_i = xor i1 %mem_conv1_load_1, %tmp1


 <State 18>: 6.41ns
ST_18: tmp_21_i [1/1] 0.00ns
:11  %tmp_21_i = zext i1 %tmp_20_i to i32

ST_18: tmp_22_i [6/6] 6.41ns
:12  %tmp_22_i = sitofp i32 %tmp_21_i to float


 <State 19>: 6.41ns
ST_19: tmp_22_i [5/6] 6.41ns
:12  %tmp_22_i = sitofp i32 %tmp_21_i to float


 <State 20>: 6.41ns
ST_20: tmp_22_i [4/6] 6.41ns
:12  %tmp_22_i = sitofp i32 %tmp_21_i to float


 <State 21>: 6.41ns
ST_21: tmp_22_i [3/6] 6.41ns
:12  %tmp_22_i = sitofp i32 %tmp_21_i to float


 <State 22>: 6.41ns
ST_22: tmp_22_i [2/6] 6.41ns
:12  %tmp_22_i = sitofp i32 %tmp_21_i to float


 <State 23>: 6.41ns
ST_23: tmp_22_i [1/6] 6.41ns
:12  %tmp_22_i = sitofp i32 %tmp_21_i to float


 <State 24>: 7.26ns
ST_24: one_out_3 [5/5] 7.26ns
:13  %one_out_3 = fadd float %one_out_i, %tmp_22_i


 <State 25>: 7.26ns
ST_25: one_out_3 [4/5] 7.26ns
:13  %one_out_3 = fadd float %one_out_i, %tmp_22_i


 <State 26>: 7.26ns
ST_26: one_out_3 [3/5] 7.26ns
:13  %one_out_3 = fadd float %one_out_i, %tmp_22_i


 <State 27>: 7.26ns
ST_27: one_out_3 [2/5] 7.26ns
:13  %one_out_3 = fadd float %one_out_i, %tmp_22_i


 <State 28>: 7.26ns
ST_28: one_out_3 [1/5] 7.26ns
:13  %one_out_3 = fadd float %one_out_i, %tmp_22_i

ST_28: stg_107 [1/1] 0.00ns
:14  br label %.preheader.i


 <State 29>: 5.70ns
ST_29: tmp_23_i [3/4] 5.70ns
:0  %tmp_23_i = fmul float %one_out_i, 2.000000e+00


 <State 30>: 5.70ns
ST_30: tmp_23_i [2/4] 5.70ns
:0  %tmp_23_i = fmul float %one_out_i, 2.000000e+00


 <State 31>: 5.70ns
ST_31: tmp_23_i [1/4] 5.70ns
:0  %tmp_23_i = fmul float %one_out_i, 2.000000e+00


 <State 32>: 7.26ns
ST_32: tmp_24_i [5/5] 7.26ns
:1  %tmp_24_i = fadd float %tmp_23_i, -5.120000e+02


 <State 33>: 7.26ns
ST_33: tmp_24_i [4/5] 7.26ns
:1  %tmp_24_i = fadd float %tmp_23_i, -5.120000e+02


 <State 34>: 7.26ns
ST_34: tmp_24_i [3/5] 7.26ns
:1  %tmp_24_i = fadd float %tmp_23_i, -5.120000e+02


 <State 35>: 7.26ns
ST_35: tmp_24_i [2/5] 7.26ns
:1  %tmp_24_i = fadd float %tmp_23_i, -5.120000e+02


 <State 36>: 7.26ns
ST_36: tmp_24_i [1/5] 7.26ns
:1  %tmp_24_i = fadd float %tmp_23_i, -5.120000e+02


 <State 37>: 5.70ns
ST_37: one_out [4/4] 5.70ns
:2  %one_out = fmul float %tmp_24_i, 6.250000e-02


 <State 38>: 5.70ns
ST_38: one_out [3/4] 5.70ns
:2  %one_out = fmul float %tmp_24_i, 6.250000e-02


 <State 39>: 5.70ns
ST_39: one_out [2/4] 5.70ns
:2  %one_out = fmul float %tmp_24_i, 6.250000e-02

ST_39: tmp_25_i [1/1] 0.00ns
:3  %tmp_25_i = zext i9 %n_i to i64

ST_39: b_fc1_addr [1/1] 0.00ns
:4  %b_fc1_addr = getelementptr [256 x float]* @b_fc1, i64 0, i64 %tmp_25_i

ST_39: b_fc1_load [2/2] 2.39ns
:5  %b_fc1_load = load float* %b_fc1_addr, align 4


 <State 40>: 5.70ns
ST_40: one_out [1/4] 5.70ns
:2  %one_out = fmul float %tmp_24_i, 6.250000e-02

ST_40: b_fc1_load [1/2] 2.39ns
:5  %b_fc1_load = load float* %b_fc1_addr, align 4


 <State 41>: 7.26ns
ST_41: biased [5/5] 7.26ns
:6  %biased = fadd float %one_out, %b_fc1_load


 <State 42>: 7.26ns
ST_42: biased [4/5] 7.26ns
:6  %biased = fadd float %one_out, %b_fc1_load


 <State 43>: 7.26ns
ST_43: biased [3/5] 7.26ns
:6  %biased = fadd float %one_out, %b_fc1_load


 <State 44>: 7.26ns
ST_44: biased [2/5] 7.26ns
:6  %biased = fadd float %one_out, %b_fc1_load


 <State 45>: 7.26ns
ST_45: biased [1/5] 7.26ns
:6  %biased = fadd float %one_out, %b_fc1_load


 <State 46>: 8.16ns
ST_46: biased_to_int [1/1] 0.00ns
:7  %biased_to_int = bitcast float %biased to i32

ST_46: tmp_12 [1/1] 0.00ns
:8  %tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %biased_to_int, i32 23, i32 30)

ST_46: tmp_31 [1/1] 0.00ns
:9  %tmp_31 = trunc i32 %biased_to_int to i23

ST_46: notlhs [1/1] 2.00ns
:10  %notlhs = icmp ne i8 %tmp_12, -1

ST_46: notrhs [1/1] 2.39ns
:11  %notrhs = icmp eq i23 %tmp_31, 0

ST_46: tmp_14 [1/1] 0.00ns (grouped into LUT with out node tmp_16)
:12  %tmp_14 = or i1 %notrhs, %notlhs

ST_46: tmp_15 [1/1] 6.79ns
:13  %tmp_15 = fcmp ogt float %biased, 0.000000e+00

ST_46: tmp_16 [1/1] 1.37ns (out node of the LUT)
:14  %tmp_16 = and i1 %tmp_14, %tmp_15


 <State 47>: 2.71ns
ST_47: mem_conv2_addr [1/1] 0.00ns
:15  %mem_conv2_addr = getelementptr [5184 x i1]* %mem_conv2, i64 0, i64 %tmp_25_i

ST_47: stg_138 [1/1] 2.71ns
:16  store i1 %tmp_16, i1* %mem_conv2_addr, align 1

ST_47: stg_139 [1/1] 0.00ns
:17  br label %1


 <State 48>: 1.57ns
ST_48: stg_140 [1/2] 0.00ns
dense.1.exit:0  call fastcc void @dut_dense([5184 x i1]* %mem_conv2, [5184 x i1]* %mem_conv1)

ST_48: stg_141 [1/1] 1.57ns
dense.1.exit:1  br label %4


 <State 49>: 2.71ns
ST_49: agg_result_V [1/1] 0.00ns
:0  %agg_result_V = phi i32 [ 0, %dense.1.exit ], [ %val_assign_agg_result_V, %._crit_edge ]

ST_49: max_id_V [1/1] 0.00ns
:1  %max_id_V = phi i4 [ 1, %dense.1.exit ], [ %i, %._crit_edge ]

ST_49: max_id_V_cast2 [1/1] 0.00ns
:2  %max_id_V_cast2 = zext i4 %max_id_V to i32

ST_49: exitcond [1/1] 1.88ns
:3  %exitcond = icmp eq i4 %max_id_V, -6

ST_49: empty_34 [1/1] 0.00ns
:4  %empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)

ST_49: stg_147 [1/1] 0.00ns
:5  br i1 %exitcond, label %5, label %._crit_edge

ST_49: tmp [1/1] 0.00ns
._crit_edge:0  %tmp = zext i4 %max_id_V to i64

ST_49: mem_conv1_addr [1/1] 0.00ns
._crit_edge:1  %mem_conv1_addr = getelementptr inbounds [5184 x i1]* %mem_conv1, i64 0, i64 %tmp

ST_49: mem_conv1_load [2/2] 2.71ns
._crit_edge:2  %mem_conv1_load = load i1* %mem_conv1_addr, align 1

ST_49: i [1/1] 0.80ns
._crit_edge:4  %i = add i4 %max_id_V, 1

ST_49: stg_152 [1/1] 0.00ns
:0  ret i32 %agg_result_V


 <State 50>: 4.08ns
ST_50: mem_conv1_load [1/2] 2.71ns
._crit_edge:2  %mem_conv1_load = load i1* %mem_conv1_addr, align 1

ST_50: val_assign_agg_result_V [1/1] 1.37ns
._crit_edge:3  %val_assign_agg_result_V = select i1 %mem_conv1_load, i32 %max_id_V_cast2, i32 %agg_result_V

ST_50: stg_155 [1/1] 0.00ns
._crit_edge:5  br label %4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
