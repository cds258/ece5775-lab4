// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pad.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pad::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pad::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> pad::ap_ST_fsm_state1 = "1";
const sc_lv<7> pad::ap_ST_fsm_state2 = "10";
const sc_lv<7> pad::ap_ST_fsm_state3 = "100";
const sc_lv<7> pad::ap_ST_fsm_state4 = "1000";
const sc_lv<7> pad::ap_ST_fsm_state5 = "10000";
const sc_lv<7> pad::ap_ST_fsm_state6 = "100000";
const sc_lv<7> pad::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> pad::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pad::ap_const_lv32_1 = "1";
const sc_lv<1> pad::ap_const_lv1_1 = "1";
const sc_lv<32> pad::ap_const_lv32_2 = "10";
const sc_lv<32> pad::ap_const_lv32_3 = "11";
const sc_lv<32> pad::ap_const_lv32_4 = "100";
const sc_lv<1> pad::ap_const_lv1_0 = "0";
const sc_lv<32> pad::ap_const_lv32_5 = "101";
const sc_lv<13> pad::ap_const_lv13_0 = "0000000000000";
const sc_lv<5> pad::ap_const_lv5_0 = "00000";
const sc_lv<8> pad::ap_const_lv8_0 = "00000000";
const sc_lv<32> pad::ap_const_lv32_6 = "110";
const sc_lv<5> pad::ap_const_lv5_2 = "10";
const sc_lv<13> pad::ap_const_lv13_1440 = "1010001000000";
const sc_lv<13> pad::ap_const_lv13_1 = "1";
const sc_lv<5> pad::ap_const_lv5_1 = "1";
const bool pad::ap_const_boolean_1 = true;

pad::pad(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dut_mac_muladd_6nbkb_U1 = new dut_mac_muladd_6nbkb<1,1,6,8,5,13>("dut_mac_muladd_6nbkb_U1");
    dut_mac_muladd_6nbkb_U1->din0(grp_fu_285_p0);
    dut_mac_muladd_6nbkb_U1->din1(grp_fu_285_p1);
    dut_mac_muladd_6nbkb_U1->din2(grp_fu_285_p2);
    dut_mac_muladd_6nbkb_U1->dout(grp_fu_285_p3);
    dut_mac_muladd_9ncud_U2 = new dut_mac_muladd_9ncud<1,1,9,5,5,13>("dut_mac_muladd_9ncud_U2");
    dut_mac_muladd_9ncud_U2->din0(grp_fu_291_p0);
    dut_mac_muladd_9ncud_U2->din1(grp_fu_291_p1);
    dut_mac_muladd_9ncud_U2->din2(grp_fu_291_p2);
    dut_mac_muladd_9ncud_U2->dout(grp_fu_291_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_I_cast_fu_185_p1);
    sensitive << ( I );

    SC_METHOD(thread_add_ln31_cast4_cast_fu_154_p1);
    sensitive << ( add_ln31_fu_148_p2 );

    SC_METHOD(thread_add_ln31_fu_148_p2);
    sensitive << ( trunc_ln31_fu_144_p1 );

    SC_METHOD(thread_add_ln39_fu_188_p2);
    sensitive << ( zext_ln38_reg_337 );
    sensitive << ( phi_mul_reg_110 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln35_fu_201_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln35_fu_201_p2 );

    SC_METHOD(thread_grp_fu_285_p0);
    sensitive << ( I_cast_reg_342 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln37_fu_244_p2 );

    SC_METHOD(thread_grp_fu_285_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln37_fu_244_p2 );
    sensitive << ( grp_fu_285_p10 );

    SC_METHOD(thread_grp_fu_285_p10);
    sensitive << ( tmp_fu_255_p2 );

    SC_METHOD(thread_grp_fu_285_p2);
    sensitive << ( zext_ln36_reg_365 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln37_fu_244_p2 );

    SC_METHOD(thread_grp_fu_291_p0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_fu_291_p00 );

    SC_METHOD(thread_grp_fu_291_p00);
    sensitive << ( tmp4_reg_396 );

    SC_METHOD(thread_grp_fu_291_p1);
    sensitive << ( add_ln31_cast4_cast_reg_314 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_291_p2);
    sensitive << ( zext_ln39_2_reg_378 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_i_fu_168_p2);
    sensitive << ( i_0_reg_88 );

    SC_METHOD(thread_icmp_ln33_fu_162_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_88 );

    SC_METHOD(thread_icmp_ln35_fu_201_p2);
    sensitive << ( trunc_ln35_reg_332 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln35_fu_197_p1 );

    SC_METHOD(thread_icmp_ln36_fu_225_p2);
    sensitive << ( I );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln36_1_fu_221_p1 );

    SC_METHOD(thread_icmp_ln37_fu_244_p2);
    sensitive << ( trunc_ln31_reg_309 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( y_0_reg_133 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln40_fu_277_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_fu_206_p2);
    sensitive << ( m_0_reg_99 );

    SC_METHOD(thread_mul_ln39_fu_212_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( mul_ln39_fu_212_p00 );

    SC_METHOD(thread_mul_ln39_fu_212_p00);
    sensitive << ( m_0_reg_99 );

    SC_METHOD(thread_mul_ln39_fu_212_p1);
    sensitive << ( zext_ln39_reg_319 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_mul_ln39_fu_212_p2);
    sensitive << ( mul_ln39_fu_212_p0 );
    sensitive << ( mul_ln39_fu_212_p1 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln33_fu_174_p1 );
    sensitive << ( zext_ln40_1_fu_281_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( input_r_q0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln33_fu_162_p2 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp4_fu_269_p2);
    sensitive << ( mul_ln39_reg_360 );
    sensitive << ( zext_ln39_3_fu_265_p1 );

    SC_METHOD(thread_tmp_fu_255_p2);
    sensitive << ( phi_mul_reg_110 );
    sensitive << ( zext_ln37_fu_240_p1 );

    SC_METHOD(thread_trunc_ln31_fu_144_p1);
    sensitive << ( I );

    SC_METHOD(thread_trunc_ln35_fu_179_p1);
    sensitive << ( M );

    SC_METHOD(thread_x_fu_230_p2);
    sensitive << ( x_0_reg_122 );

    SC_METHOD(thread_y_fu_249_p2);
    sensitive << ( y_0_reg_133 );

    SC_METHOD(thread_zext_ln33_fu_174_p1);
    sensitive << ( i_0_reg_88 );

    SC_METHOD(thread_zext_ln35_fu_197_p1);
    sensitive << ( m_0_reg_99 );

    SC_METHOD(thread_zext_ln36_1_fu_221_p1);
    sensitive << ( x_0_reg_122 );

    SC_METHOD(thread_zext_ln36_fu_217_p1);
    sensitive << ( x_0_reg_122 );

    SC_METHOD(thread_zext_ln37_fu_240_p1);
    sensitive << ( y_0_reg_133 );

    SC_METHOD(thread_zext_ln38_fu_182_p1);
    sensitive << ( I );

    SC_METHOD(thread_zext_ln39_2_fu_236_p1);
    sensitive << ( x_fu_230_p2 );

    SC_METHOD(thread_zext_ln39_3_fu_265_p1);
    sensitive << ( y_fu_249_p2 );

    SC_METHOD(thread_zext_ln39_fu_158_p1);
    sensitive << ( add_ln31_fu_148_p2 );

    SC_METHOD(thread_zext_ln40_1_fu_281_p1);
    sensitive << ( o_index_reg_401 );

    SC_METHOD(thread_zext_ln40_fu_277_p1);
    sensitive << ( i_index_reg_391 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln33_fu_162_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln35_fu_201_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln36_fu_225_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln37_fu_244_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pad_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, M, "(port)M");
    sc_trace(mVcdFile, I, "(port)I");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, trunc_ln31_fu_144_p1, "trunc_ln31_fu_144_p1");
    sc_trace(mVcdFile, trunc_ln31_reg_309, "trunc_ln31_reg_309");
    sc_trace(mVcdFile, add_ln31_cast4_cast_fu_154_p1, "add_ln31_cast4_cast_fu_154_p1");
    sc_trace(mVcdFile, add_ln31_cast4_cast_reg_314, "add_ln31_cast4_cast_reg_314");
    sc_trace(mVcdFile, zext_ln39_fu_158_p1, "zext_ln39_fu_158_p1");
    sc_trace(mVcdFile, zext_ln39_reg_319, "zext_ln39_reg_319");
    sc_trace(mVcdFile, i_fu_168_p2, "i_fu_168_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, trunc_ln35_fu_179_p1, "trunc_ln35_fu_179_p1");
    sc_trace(mVcdFile, trunc_ln35_reg_332, "trunc_ln35_reg_332");
    sc_trace(mVcdFile, icmp_ln33_fu_162_p2, "icmp_ln33_fu_162_p2");
    sc_trace(mVcdFile, zext_ln38_fu_182_p1, "zext_ln38_fu_182_p1");
    sc_trace(mVcdFile, zext_ln38_reg_337, "zext_ln38_reg_337");
    sc_trace(mVcdFile, I_cast_fu_185_p1, "I_cast_fu_185_p1");
    sc_trace(mVcdFile, I_cast_reg_342, "I_cast_reg_342");
    sc_trace(mVcdFile, add_ln39_fu_188_p2, "add_ln39_fu_188_p2");
    sc_trace(mVcdFile, add_ln39_reg_347, "add_ln39_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, m_fu_206_p2, "m_fu_206_p2");
    sc_trace(mVcdFile, m_reg_355, "m_reg_355");
    sc_trace(mVcdFile, mul_ln39_fu_212_p2, "mul_ln39_fu_212_p2");
    sc_trace(mVcdFile, mul_ln39_reg_360, "mul_ln39_reg_360");
    sc_trace(mVcdFile, icmp_ln35_fu_201_p2, "icmp_ln35_fu_201_p2");
    sc_trace(mVcdFile, zext_ln36_fu_217_p1, "zext_ln36_fu_217_p1");
    sc_trace(mVcdFile, zext_ln36_reg_365, "zext_ln36_reg_365");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, x_fu_230_p2, "x_fu_230_p2");
    sc_trace(mVcdFile, x_reg_373, "x_reg_373");
    sc_trace(mVcdFile, zext_ln39_2_fu_236_p1, "zext_ln39_2_fu_236_p1");
    sc_trace(mVcdFile, zext_ln39_2_reg_378, "zext_ln39_2_reg_378");
    sc_trace(mVcdFile, icmp_ln36_fu_225_p2, "icmp_ln36_fu_225_p2");
    sc_trace(mVcdFile, y_fu_249_p2, "y_fu_249_p2");
    sc_trace(mVcdFile, y_reg_386, "y_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_285_p3, "grp_fu_285_p3");
    sc_trace(mVcdFile, i_index_reg_391, "i_index_reg_391");
    sc_trace(mVcdFile, icmp_ln37_fu_244_p2, "icmp_ln37_fu_244_p2");
    sc_trace(mVcdFile, tmp4_fu_269_p2, "tmp4_fu_269_p2");
    sc_trace(mVcdFile, tmp4_reg_396, "tmp4_reg_396");
    sc_trace(mVcdFile, grp_fu_291_p3, "grp_fu_291_p3");
    sc_trace(mVcdFile, o_index_reg_401, "o_index_reg_401");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_0_reg_88, "i_0_reg_88");
    sc_trace(mVcdFile, m_0_reg_99, "m_0_reg_99");
    sc_trace(mVcdFile, phi_mul_reg_110, "phi_mul_reg_110");
    sc_trace(mVcdFile, x_0_reg_122, "x_0_reg_122");
    sc_trace(mVcdFile, y_0_reg_133, "y_0_reg_133");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln33_fu_174_p1, "zext_ln33_fu_174_p1");
    sc_trace(mVcdFile, zext_ln40_fu_277_p1, "zext_ln40_fu_277_p1");
    sc_trace(mVcdFile, zext_ln40_1_fu_281_p1, "zext_ln40_1_fu_281_p1");
    sc_trace(mVcdFile, add_ln31_fu_148_p2, "add_ln31_fu_148_p2");
    sc_trace(mVcdFile, zext_ln35_fu_197_p1, "zext_ln35_fu_197_p1");
    sc_trace(mVcdFile, mul_ln39_fu_212_p0, "mul_ln39_fu_212_p0");
    sc_trace(mVcdFile, mul_ln39_fu_212_p1, "mul_ln39_fu_212_p1");
    sc_trace(mVcdFile, zext_ln36_1_fu_221_p1, "zext_ln36_1_fu_221_p1");
    sc_trace(mVcdFile, zext_ln37_fu_240_p1, "zext_ln37_fu_240_p1");
    sc_trace(mVcdFile, tmp_fu_255_p2, "tmp_fu_255_p2");
    sc_trace(mVcdFile, zext_ln39_3_fu_265_p1, "zext_ln39_3_fu_265_p1");
    sc_trace(mVcdFile, grp_fu_285_p0, "grp_fu_285_p0");
    sc_trace(mVcdFile, grp_fu_285_p1, "grp_fu_285_p1");
    sc_trace(mVcdFile, grp_fu_285_p2, "grp_fu_285_p2");
    sc_trace(mVcdFile, grp_fu_291_p0, "grp_fu_291_p0");
    sc_trace(mVcdFile, grp_fu_291_p1, "grp_fu_291_p1");
    sc_trace(mVcdFile, grp_fu_291_p2, "grp_fu_291_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_285_p10, "grp_fu_285_p10");
    sc_trace(mVcdFile, grp_fu_291_p00, "grp_fu_291_p00");
    sc_trace(mVcdFile, mul_ln39_fu_212_p00, "mul_ln39_fu_212_p00");
#endif

    }
}

pad::~pad() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dut_mac_muladd_6nbkb_U1;
    delete dut_mac_muladd_9ncud_U2;
}

void pad::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_162_p2.read(), ap_const_lv1_0))) {
        i_0_reg_88 = i_fu_168_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_88 = ap_const_lv13_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_fu_225_p2.read(), ap_const_lv1_0))) {
        m_0_reg_99 = m_reg_355.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln33_fu_162_p2.read(), ap_const_lv1_1))) {
        m_0_reg_99 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln36_fu_225_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_110 = add_ln39_reg_347.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln33_fu_162_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_110 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln37_fu_244_p2.read()))) {
        x_0_reg_122 = x_reg_373.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_201_p2.read()))) {
        x_0_reg_122 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_fu_225_p2.read()))) {
        y_0_reg_133 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        y_0_reg_133 = y_reg_386.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_162_p2.read(), ap_const_lv1_1))) {
        I_cast_reg_342 = I_cast_fu_185_p1.read();
        trunc_ln35_reg_332 = trunc_ln35_fu_179_p1.read();
        zext_ln38_reg_337 = zext_ln38_fu_182_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln31_cast4_cast_reg_314 = add_ln31_cast4_cast_fu_154_p1.read();
        trunc_ln31_reg_309 = trunc_ln31_fu_144_p1.read();
        zext_ln39_reg_319 = zext_ln39_fu_158_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln39_reg_347 = add_ln39_fu_188_p2.read();
        m_reg_355 = m_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln37_fu_244_p2.read(), ap_const_lv1_0))) {
        i_index_reg_391 = grp_fu_285_p3.read();
        tmp4_reg_396 = tmp4_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_201_p2.read()))) {
        mul_ln39_reg_360 = mul_ln39_fu_212_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        o_index_reg_401 = grp_fu_291_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        x_reg_373 = x_fu_230_p2.read();
        zext_ln36_reg_365 = zext_ln36_fu_217_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        y_reg_386 = y_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln36_fu_225_p2.read()))) {
        zext_ln39_2_reg_378 = zext_ln39_2_fu_236_p1.read();
    }
}

void pad::thread_I_cast_fu_185_p1() {
    I_cast_fu_185_p1 = esl_zext<13,6>(I.read());
}

void pad::thread_add_ln31_cast4_cast_fu_154_p1() {
    add_ln31_cast4_cast_fu_154_p1 = esl_zext<13,5>(add_ln31_fu_148_p2.read());
}

void pad::thread_add_ln31_fu_148_p2() {
    add_ln31_fu_148_p2 = (!ap_const_lv5_2.is_01() || !trunc_ln31_fu_144_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_2) + sc_biguint<5>(trunc_ln31_fu_144_p1.read()));
}

void pad::thread_add_ln39_fu_188_p2() {
    add_ln39_fu_188_p2 = (!phi_mul_reg_110.read().is_01() || !zext_ln38_reg_337.read().is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_110.read()) + sc_biguint<8>(zext_ln38_reg_337.read()));
}

void pad::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pad::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pad::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pad::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pad::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pad::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pad::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pad::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln35_fu_201_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pad::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pad::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln35_fu_201_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pad::thread_grp_fu_285_p0() {
    grp_fu_285_p0 =  (sc_lv<6>) (I_cast_reg_342.read());
}

void pad::thread_grp_fu_285_p1() {
    grp_fu_285_p1 =  (sc_lv<8>) (grp_fu_285_p10.read());
}

void pad::thread_grp_fu_285_p10() {
    grp_fu_285_p10 = esl_zext<13,8>(tmp_fu_255_p2.read());
}

void pad::thread_grp_fu_285_p2() {
    grp_fu_285_p2 =  (sc_lv<5>) (zext_ln36_reg_365.read());
}

void pad::thread_grp_fu_291_p0() {
    grp_fu_291_p0 =  (sc_lv<9>) (grp_fu_291_p00.read());
}

void pad::thread_grp_fu_291_p00() {
    grp_fu_291_p00 = esl_zext<13,9>(tmp4_reg_396.read());
}

void pad::thread_grp_fu_291_p1() {
    grp_fu_291_p1 =  (sc_lv<5>) (add_ln31_cast4_cast_reg_314.read());
}

void pad::thread_grp_fu_291_p2() {
    grp_fu_291_p2 =  (sc_lv<5>) (zext_ln39_2_reg_378.read());
}

void pad::thread_i_fu_168_p2() {
    i_fu_168_p2 = (!i_0_reg_88.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(i_0_reg_88.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void pad::thread_icmp_ln33_fu_162_p2() {
    icmp_ln33_fu_162_p2 = (!i_0_reg_88.read().is_01() || !ap_const_lv13_1440.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_88.read() == ap_const_lv13_1440);
}

void pad::thread_icmp_ln35_fu_201_p2() {
    icmp_ln35_fu_201_p2 = (!zext_ln35_fu_197_p1.read().is_01() || !trunc_ln35_reg_332.read().is_01())? sc_lv<1>(): (sc_bigint<6>(zext_ln35_fu_197_p1.read()) < sc_bigint<6>(trunc_ln35_reg_332.read()));
}

void pad::thread_icmp_ln36_fu_225_p2() {
    icmp_ln36_fu_225_p2 = (!zext_ln36_1_fu_221_p1.read().is_01() || !I.read().is_01())? sc_lv<1>(): (sc_bigint<6>(zext_ln36_1_fu_221_p1.read()) < sc_bigint<6>(I.read()));
}

void pad::thread_icmp_ln37_fu_244_p2() {
    icmp_ln37_fu_244_p2 = (!y_0_reg_133.read().is_01() || !trunc_ln31_reg_309.read().is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_133.read() == trunc_ln31_reg_309.read());
}

void pad::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<13>) (zext_ln40_fu_277_p1.read());
}

void pad::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pad::thread_m_fu_206_p2() {
    m_fu_206_p2 = (!m_0_reg_99.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(m_0_reg_99.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pad::thread_mul_ln39_fu_212_p0() {
    mul_ln39_fu_212_p0 =  (sc_lv<5>) (mul_ln39_fu_212_p00.read());
}

void pad::thread_mul_ln39_fu_212_p00() {
    mul_ln39_fu_212_p00 = esl_zext<9,5>(m_0_reg_99.read());
}

void pad::thread_mul_ln39_fu_212_p1() {
    mul_ln39_fu_212_p1 =  (sc_lv<5>) (zext_ln39_reg_319.read());
}

void pad::thread_mul_ln39_fu_212_p2() {
    mul_ln39_fu_212_p2 = (!mul_ln39_fu_212_p0.read().is_01() || !mul_ln39_fu_212_p1.read().is_01())? sc_lv<9>(): sc_biguint<5>(mul_ln39_fu_212_p0.read()) * sc_biguint<5>(mul_ln39_fu_212_p1.read());
}

void pad::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_address0 =  (sc_lv<13>) (zext_ln40_1_fu_281_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_r_address0 =  (sc_lv<13>) (zext_ln33_fu_174_p1.read());
    } else {
        output_r_address0 = "XXXXXXXXXXXXX";
    }
}

void pad::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pad::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_d0 = input_r_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        output_r_d0 = ap_const_lv1_0;
    } else {
        output_r_d0 =  (sc_lv<1>) ("X");
    }
}

void pad::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln33_fu_162_p2.read(), ap_const_lv1_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pad::thread_tmp4_fu_269_p2() {
    tmp4_fu_269_p2 = (!zext_ln39_3_fu_265_p1.read().is_01() || !mul_ln39_reg_360.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln39_3_fu_265_p1.read()) + sc_biguint<9>(mul_ln39_reg_360.read()));
}

void pad::thread_tmp_fu_255_p2() {
    tmp_fu_255_p2 = (!zext_ln37_fu_240_p1.read().is_01() || !phi_mul_reg_110.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln37_fu_240_p1.read()) + sc_biguint<8>(phi_mul_reg_110.read()));
}

void pad::thread_trunc_ln31_fu_144_p1() {
    trunc_ln31_fu_144_p1 = I.read().range(5-1, 0);
}

void pad::thread_trunc_ln35_fu_179_p1() {
    trunc_ln35_fu_179_p1 = M.read().range(6-1, 0);
}

void pad::thread_x_fu_230_p2() {
    x_fu_230_p2 = (!x_0_reg_122.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(x_0_reg_122.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pad::thread_y_fu_249_p2() {
    y_fu_249_p2 = (!y_0_reg_133.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(y_0_reg_133.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pad::thread_zext_ln33_fu_174_p1() {
    zext_ln33_fu_174_p1 = esl_zext<64,13>(i_0_reg_88.read());
}

void pad::thread_zext_ln35_fu_197_p1() {
    zext_ln35_fu_197_p1 = esl_zext<6,5>(m_0_reg_99.read());
}

void pad::thread_zext_ln36_1_fu_221_p1() {
    zext_ln36_1_fu_221_p1 = esl_zext<6,5>(x_0_reg_122.read());
}

void pad::thread_zext_ln36_fu_217_p1() {
    zext_ln36_fu_217_p1 = esl_zext<13,5>(x_0_reg_122.read());
}

void pad::thread_zext_ln37_fu_240_p1() {
    zext_ln37_fu_240_p1 = esl_zext<8,5>(y_0_reg_133.read());
}

void pad::thread_zext_ln38_fu_182_p1() {
    zext_ln38_fu_182_p1 = esl_zext<8,6>(I.read());
}

void pad::thread_zext_ln39_2_fu_236_p1() {
    zext_ln39_2_fu_236_p1 = esl_zext<13,5>(x_fu_230_p2.read());
}

void pad::thread_zext_ln39_3_fu_265_p1() {
    zext_ln39_3_fu_265_p1 = esl_zext<9,5>(y_fu_249_p2.read());
}

void pad::thread_zext_ln39_fu_158_p1() {
    zext_ln39_fu_158_p1 = esl_zext<9,5>(add_ln31_fu_148_p2.read());
}

void pad::thread_zext_ln40_1_fu_281_p1() {
    zext_ln40_1_fu_281_p1 = esl_zext<64,13>(o_index_reg_401.read());
}

void pad::thread_zext_ln40_fu_277_p1() {
    zext_ln40_fu_277_p1 = esl_zext<64,13>(i_index_reg_391.read());
}

void pad::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_162_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln35_fu_201_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln36_fu_225_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln37_fu_244_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

