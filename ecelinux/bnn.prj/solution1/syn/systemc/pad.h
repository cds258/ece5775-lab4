// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pad_HH_
#define _pad_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_mac_muladd_6nbkb.h"
#include "dut_mac_muladd_9ncud.h"

namespace ap_rtl {

struct pad : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<1> > input_r_q0;
    sc_out< sc_lv<13> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<1> > output_r_d0;
    sc_in< sc_lv<7> > M;
    sc_in< sc_lv<6> > I;


    // Module declarations
    pad(sc_module_name name);
    SC_HAS_PROCESS(pad);

    ~pad();

    sc_trace_file* mVcdFile;

    dut_mac_muladd_6nbkb<1,1,6,8,5,13>* dut_mac_muladd_6nbkb_U1;
    dut_mac_muladd_9ncud<1,1,9,5,5,13>* dut_mac_muladd_9ncud_U2;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > trunc_ln31_fu_144_p1;
    sc_signal< sc_lv<5> > trunc_ln31_reg_309;
    sc_signal< sc_lv<13> > add_ln31_cast4_cast_fu_154_p1;
    sc_signal< sc_lv<13> > add_ln31_cast4_cast_reg_314;
    sc_signal< sc_lv<9> > zext_ln39_fu_158_p1;
    sc_signal< sc_lv<9> > zext_ln39_reg_319;
    sc_signal< sc_lv<13> > i_fu_168_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > trunc_ln35_fu_179_p1;
    sc_signal< sc_lv<6> > trunc_ln35_reg_332;
    sc_signal< sc_lv<1> > icmp_ln33_fu_162_p2;
    sc_signal< sc_lv<8> > zext_ln38_fu_182_p1;
    sc_signal< sc_lv<8> > zext_ln38_reg_337;
    sc_signal< sc_lv<13> > I_cast_fu_185_p1;
    sc_signal< sc_lv<13> > I_cast_reg_342;
    sc_signal< sc_lv<8> > add_ln39_fu_188_p2;
    sc_signal< sc_lv<8> > add_ln39_reg_347;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > m_fu_206_p2;
    sc_signal< sc_lv<5> > m_reg_355;
    sc_signal< sc_lv<9> > mul_ln39_fu_212_p2;
    sc_signal< sc_lv<9> > mul_ln39_reg_360;
    sc_signal< sc_lv<1> > icmp_ln35_fu_201_p2;
    sc_signal< sc_lv<13> > zext_ln36_fu_217_p1;
    sc_signal< sc_lv<13> > zext_ln36_reg_365;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > x_fu_230_p2;
    sc_signal< sc_lv<5> > x_reg_373;
    sc_signal< sc_lv<13> > zext_ln39_2_fu_236_p1;
    sc_signal< sc_lv<13> > zext_ln39_2_reg_378;
    sc_signal< sc_lv<1> > icmp_ln36_fu_225_p2;
    sc_signal< sc_lv<5> > y_fu_249_p2;
    sc_signal< sc_lv<5> > y_reg_386;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<13> > grp_fu_285_p3;
    sc_signal< sc_lv<13> > i_index_reg_391;
    sc_signal< sc_lv<1> > icmp_ln37_fu_244_p2;
    sc_signal< sc_lv<9> > tmp4_fu_269_p2;
    sc_signal< sc_lv<9> > tmp4_reg_396;
    sc_signal< sc_lv<13> > grp_fu_291_p3;
    sc_signal< sc_lv<13> > o_index_reg_401;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<13> > i_0_reg_88;
    sc_signal< sc_lv<5> > m_0_reg_99;
    sc_signal< sc_lv<8> > phi_mul_reg_110;
    sc_signal< sc_lv<5> > x_0_reg_122;
    sc_signal< sc_lv<5> > y_0_reg_133;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln33_fu_174_p1;
    sc_signal< sc_lv<64> > zext_ln40_fu_277_p1;
    sc_signal< sc_lv<64> > zext_ln40_1_fu_281_p1;
    sc_signal< sc_lv<5> > add_ln31_fu_148_p2;
    sc_signal< sc_lv<6> > zext_ln35_fu_197_p1;
    sc_signal< sc_lv<5> > mul_ln39_fu_212_p0;
    sc_signal< sc_lv<5> > mul_ln39_fu_212_p1;
    sc_signal< sc_lv<6> > zext_ln36_1_fu_221_p1;
    sc_signal< sc_lv<8> > zext_ln37_fu_240_p1;
    sc_signal< sc_lv<8> > tmp_fu_255_p2;
    sc_signal< sc_lv<9> > zext_ln39_3_fu_265_p1;
    sc_signal< sc_lv<6> > grp_fu_285_p0;
    sc_signal< sc_lv<8> > grp_fu_285_p1;
    sc_signal< sc_lv<5> > grp_fu_285_p2;
    sc_signal< sc_lv<9> > grp_fu_291_p0;
    sc_signal< sc_lv<5> > grp_fu_291_p1;
    sc_signal< sc_lv<5> > grp_fu_291_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<13> > grp_fu_285_p10;
    sc_signal< sc_lv<13> > grp_fu_291_p00;
    sc_signal< sc_lv<9> > mul_ln39_fu_212_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<13> ap_const_lv13_1440;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_I_cast_fu_185_p1();
    void thread_add_ln31_cast4_cast_fu_154_p1();
    void thread_add_ln31_fu_148_p2();
    void thread_add_ln39_fu_188_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_285_p0();
    void thread_grp_fu_285_p1();
    void thread_grp_fu_285_p10();
    void thread_grp_fu_285_p2();
    void thread_grp_fu_291_p0();
    void thread_grp_fu_291_p00();
    void thread_grp_fu_291_p1();
    void thread_grp_fu_291_p2();
    void thread_i_fu_168_p2();
    void thread_icmp_ln33_fu_162_p2();
    void thread_icmp_ln35_fu_201_p2();
    void thread_icmp_ln36_fu_225_p2();
    void thread_icmp_ln37_fu_244_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_m_fu_206_p2();
    void thread_mul_ln39_fu_212_p0();
    void thread_mul_ln39_fu_212_p00();
    void thread_mul_ln39_fu_212_p1();
    void thread_mul_ln39_fu_212_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_tmp4_fu_269_p2();
    void thread_tmp_fu_255_p2();
    void thread_trunc_ln31_fu_144_p1();
    void thread_trunc_ln35_fu_179_p1();
    void thread_x_fu_230_p2();
    void thread_y_fu_249_p2();
    void thread_zext_ln33_fu_174_p1();
    void thread_zext_ln35_fu_197_p1();
    void thread_zext_ln36_1_fu_221_p1();
    void thread_zext_ln36_fu_217_p1();
    void thread_zext_ln37_fu_240_p1();
    void thread_zext_ln38_fu_182_p1();
    void thread_zext_ln39_2_fu_236_p1();
    void thread_zext_ln39_3_fu_265_p1();
    void thread_zext_ln39_fu_158_p1();
    void thread_zext_ln40_1_fu_281_p1();
    void thread_zext_ln40_fu_277_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
