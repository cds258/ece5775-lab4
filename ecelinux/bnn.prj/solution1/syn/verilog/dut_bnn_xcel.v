// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_bnn_xcel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 50'b1;
parameter    ap_ST_st2_fsm_1 = 50'b10;
parameter    ap_ST_st3_fsm_2 = 50'b100;
parameter    ap_ST_st4_fsm_3 = 50'b1000;
parameter    ap_ST_st5_fsm_4 = 50'b10000;
parameter    ap_ST_st6_fsm_5 = 50'b100000;
parameter    ap_ST_st7_fsm_6 = 50'b1000000;
parameter    ap_ST_st8_fsm_7 = 50'b10000000;
parameter    ap_ST_st9_fsm_8 = 50'b100000000;
parameter    ap_ST_st10_fsm_9 = 50'b1000000000;
parameter    ap_ST_st11_fsm_10 = 50'b10000000000;
parameter    ap_ST_st12_fsm_11 = 50'b100000000000;
parameter    ap_ST_st13_fsm_12 = 50'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 50'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 50'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 50'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 50'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 50'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 50'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 50'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 50'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 50'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 50'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 50'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 50'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 50'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 50'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 50'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 50'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 50'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 50'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 50'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 50'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 50'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 50'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 50'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 50'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 50'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 50'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 50'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 50'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 50'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 50'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 50'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 50'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 50'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 50'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 50'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 50'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 50'b10000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv7_10 = 7'b10000;
parameter    ap_const_lv7_20 = 7'b100000;
parameter    ap_const_lv6_12 = 6'b10010;
parameter    ap_const_lv6_A = 6'b1010;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv6_10 = 6'b10000;
parameter    ap_const_lv6_8 = 6'b1000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_C4000000 = 32'b11000100000000000000000000000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_3D800000 = 32'b111101100000000000000000000000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_200 = 10'b1000000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv5_2 = 5'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] input_r_address0;
output   input_r_ce0;
input  [0:0] input_r_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [49:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_67;
wire   [7:0] threshold1_V_q0;
wire   [7:0] threshold2_V_q0;
wire   [16:0] w_fc1_address0;
reg    w_fc1_ce0;
wire   [0:0] w_fc1_q0;
wire   [7:0] b_fc1_address0;
reg    b_fc1_ce0;
wire   [31:0] b_fc1_q0;
wire   [31:0] grp_fu_290_p2;
reg   [31:0] reg_305;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_116;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_123;
wire   [31:0] grp_fu_284_p2;
reg   [31:0] reg_310;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_133;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_140;
wire   [16:0] n_i_cast6_fu_316_p1;
reg   [16:0] n_i_cast6_reg_462;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_150;
wire   [8:0] n_fu_326_p2;
reg   [8:0] n_reg_470;
wire   [9:0] m_fu_338_p2;
reg   [9:0] m_reg_478;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_161;
wire   [0:0] exitcond2_fu_332_p2;
wire   [0:0] tmp_20_i_fu_377_p2;
reg   [0:0] tmp_20_i_reg_493;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_178;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_187;
wire   [31:0] grp_fu_297_p1;
reg   [31:0] tmp_22_i_reg_503;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_196;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_204;
wire   [63:0] tmp_25_i_fu_387_p1;
reg   [63:0] tmp_25_i_reg_513;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_213;
reg   [31:0] b_fc1_load_reg_523;
wire   [0:0] tmp_16_fu_428_p2;
reg   [0:0] tmp_16_reg_528;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_225;
wire   [31:0] max_id_V_cast2_fu_434_p1;
reg   [31:0] max_id_V_cast2_reg_533;
reg    ap_sig_cseq_ST_st49_fsm_48;
reg    ap_sig_234;
wire   [0:0] exitcond_fu_438_p2;
wire   [3:0] i_fu_449_p2;
reg   [3:0] i_reg_546;
wire   [31:0] val_assign_agg_result_V_fu_455_p3;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_250;
reg   [12:0] mem_conv1_address0;
reg    mem_conv1_ce0;
reg    mem_conv1_we0;
reg   [0:0] mem_conv1_d0;
wire   [0:0] mem_conv1_q0;
reg   [12:0] mem_conv2_address0;
reg    mem_conv2_ce0;
reg    mem_conv2_we0;
reg   [0:0] mem_conv2_d0;
wire   [0:0] mem_conv2_q0;
wire    grp_dut_dense_fu_217_ap_start;
wire    grp_dut_dense_fu_217_ap_done;
wire    grp_dut_dense_fu_217_ap_idle;
wire    grp_dut_dense_fu_217_ap_ready;
wire   [12:0] grp_dut_dense_fu_217_input_r_address0;
wire    grp_dut_dense_fu_217_input_r_ce0;
wire   [12:0] grp_dut_dense_fu_217_output_r_address0;
wire    grp_dut_dense_fu_217_output_r_ce0;
wire    grp_dut_dense_fu_217_output_r_we0;
wire   [0:0] grp_dut_dense_fu_217_output_r_d0;
wire    grp_dut_conv_fu_227_ap_start;
wire    grp_dut_conv_fu_227_ap_done;
wire    grp_dut_conv_fu_227_ap_idle;
wire    grp_dut_conv_fu_227_ap_ready;
wire   [12:0] grp_dut_conv_fu_227_input_r_address0;
wire    grp_dut_conv_fu_227_input_r_ce0;
reg   [0:0] grp_dut_conv_fu_227_input_r_q0;
wire   [12:0] grp_dut_conv_fu_227_output_r_address0;
wire    grp_dut_conv_fu_227_output_r_ce0;
wire    grp_dut_conv_fu_227_output_r_we0;
wire   [0:0] grp_dut_conv_fu_227_output_r_d0;
wire   [12:0] grp_dut_conv_fu_227_threshold_V_address0;
wire    grp_dut_conv_fu_227_threshold_V_ce0;
reg   [7:0] grp_dut_conv_fu_227_threshold_V_q0;
reg   [6:0] grp_dut_conv_fu_227_M;
reg   [6:0] grp_dut_conv_fu_227_N;
reg   [5:0] grp_dut_conv_fu_227_I;
reg   [0:0] grp_dut_conv_fu_227_L;
wire    grp_dut_max_pool_fu_252_ap_start;
wire    grp_dut_max_pool_fu_252_ap_done;
wire    grp_dut_max_pool_fu_252_ap_idle;
wire    grp_dut_max_pool_fu_252_ap_ready;
wire   [12:0] grp_dut_max_pool_fu_252_input_r_address0;
wire    grp_dut_max_pool_fu_252_input_r_ce0;
reg   [0:0] grp_dut_max_pool_fu_252_input_r_q0;
wire   [12:0] grp_dut_max_pool_fu_252_output_r_address0;
wire    grp_dut_max_pool_fu_252_output_r_ce0;
wire    grp_dut_max_pool_fu_252_output_r_we0;
wire   [0:0] grp_dut_max_pool_fu_252_output_r_d0;
reg   [6:0] grp_dut_max_pool_fu_252_M;
reg   [5:0] grp_dut_max_pool_fu_252_I;
wire    grp_dut_pad_fu_264_ap_start;
wire    grp_dut_pad_fu_264_ap_done;
wire    grp_dut_pad_fu_264_ap_idle;
wire    grp_dut_pad_fu_264_ap_ready;
wire   [12:0] grp_dut_pad_fu_264_input_r_address0;
wire    grp_dut_pad_fu_264_input_r_ce0;
reg   [0:0] grp_dut_pad_fu_264_input_r_q0;
wire   [12:0] grp_dut_pad_fu_264_output_r_address0;
wire    grp_dut_pad_fu_264_output_r_ce0;
wire    grp_dut_pad_fu_264_output_r_we0;
wire   [0:0] grp_dut_pad_fu_264_output_r_d0;
reg   [6:0] grp_dut_pad_fu_264_M;
reg   [5:0] grp_dut_pad_fu_264_I;
wire    grp_dut_reshape_fu_278_ap_start;
wire    grp_dut_reshape_fu_278_ap_done;
wire    grp_dut_reshape_fu_278_ap_idle;
wire    grp_dut_reshape_fu_278_ap_ready;
wire   [12:0] grp_dut_reshape_fu_278_input_r_address0;
wire    grp_dut_reshape_fu_278_input_r_ce0;
wire   [12:0] grp_dut_reshape_fu_278_output_r_address0;
wire    grp_dut_reshape_fu_278_output_r_ce0;
wire    grp_dut_reshape_fu_278_output_r_we0;
wire   [0:0] grp_dut_reshape_fu_278_output_r_d0;
reg   [8:0] n_i_reg_159;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_355;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_365;
reg   [31:0] one_out_i_reg_171;
wire   [0:0] exitcond3_fu_320_p2;
reg   [9:0] m_i_reg_183;
reg   [31:0] agg_result_V_reg_194;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_382;
reg   [3:0] max_id_V_reg_206;
reg    ap_reg_grp_dut_dense_fu_217_ap_start;
reg    ap_reg_grp_dut_conv_fu_227_ap_start;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_417;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_424;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_432;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_439;
reg    ap_reg_grp_dut_max_pool_fu_252_ap_start;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_470;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_477;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_485;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_492;
reg    ap_reg_grp_dut_pad_fu_264_ap_start;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_506;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_514;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_521;
reg    ap_reg_grp_dut_reshape_fu_278_ap_start;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_530;
wire   [63:0] tmp_18_i_fu_361_p1;
wire   [63:0] tmp_19_i_fu_366_p1;
wire   [63:0] tmp_fu_444_p1;
reg   [31:0] grp_fu_284_p0;
reg   [31:0] grp_fu_284_p1;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_546;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_553;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_560;
reg   [31:0] grp_fu_290_p0;
reg   [31:0] grp_fu_290_p1;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_572;
wire   [31:0] grp_fu_297_p0;
wire   [8:0] tmp_32_fu_344_p1;
wire   [16:0] tmp_17_i_fu_348_p3;
wire   [16:0] w_index_fu_356_p2;
wire   [0:0] tmp1_fu_371_p2;
wire   [31:0] biased_to_int_fu_392_p1;
wire   [7:0] tmp_12_fu_396_p4;
wire   [22:0] tmp_31_fu_406_p1;
wire   [0:0] notrhs_fu_416_p2;
wire   [0:0] notlhs_fu_410_p2;
wire   [0:0] tmp_14_fu_422_p2;
wire   [0:0] tmp_15_fu_300_p2;
reg   [31:0] ap_return_preg;
reg   [49:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 50'b1;
#0 ap_reg_grp_dut_dense_fu_217_ap_start = 1'b0;
#0 ap_reg_grp_dut_conv_fu_227_ap_start = 1'b0;
#0 ap_reg_grp_dut_max_pool_fu_252_ap_start = 1'b0;
#0 ap_reg_grp_dut_pad_fu_264_ap_start = 1'b0;
#0 ap_reg_grp_dut_reshape_fu_278_ap_start = 1'b0;
#0 ap_return_preg = 32'b00000000000000000000000000000000;
end

dut_bnn_xcel_threshold1_V #(
    .DataWidth( 8 ),
    .AddressRange( 5184 ),
    .AddressWidth( 13 ))
threshold1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_dut_conv_fu_227_threshold_V_address0),
    .ce0(grp_dut_conv_fu_227_threshold_V_ce0),
    .q0(threshold1_V_q0)
);

dut_bnn_xcel_threshold2_V #(
    .DataWidth( 8 ),
    .AddressRange( 5184 ),
    .AddressWidth( 13 ))
threshold2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_dut_conv_fu_227_threshold_V_address0),
    .ce0(grp_dut_conv_fu_227_threshold_V_ce0),
    .q0(threshold2_V_q0)
);

dut_bnn_xcel_w_fc1 #(
    .DataWidth( 1 ),
    .AddressRange( 131072 ),
    .AddressWidth( 17 ))
w_fc1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w_fc1_address0),
    .ce0(w_fc1_ce0),
    .q0(w_fc1_q0)
);

dut_bnn_xcel_b_fc1 #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
b_fc1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(b_fc1_address0),
    .ce0(b_fc1_ce0),
    .q0(b_fc1_q0)
);

dut_bnn_xcel_mem_conv1 #(
    .DataWidth( 1 ),
    .AddressRange( 5184 ),
    .AddressWidth( 13 ))
mem_conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv1_address0),
    .ce0(mem_conv1_ce0),
    .we0(mem_conv1_we0),
    .d0(mem_conv1_d0),
    .q0(mem_conv1_q0)
);

dut_bnn_xcel_mem_conv1 #(
    .DataWidth( 1 ),
    .AddressRange( 5184 ),
    .AddressWidth( 13 ))
mem_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mem_conv2_address0),
    .ce0(mem_conv2_ce0),
    .we0(mem_conv2_we0),
    .d0(mem_conv2_d0),
    .q0(mem_conv2_q0)
);

dut_dense grp_dut_dense_fu_217(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_dense_fu_217_ap_start),
    .ap_done(grp_dut_dense_fu_217_ap_done),
    .ap_idle(grp_dut_dense_fu_217_ap_idle),
    .ap_ready(grp_dut_dense_fu_217_ap_ready),
    .input_r_address0(grp_dut_dense_fu_217_input_r_address0),
    .input_r_ce0(grp_dut_dense_fu_217_input_r_ce0),
    .input_r_q0(mem_conv2_q0),
    .output_r_address0(grp_dut_dense_fu_217_output_r_address0),
    .output_r_ce0(grp_dut_dense_fu_217_output_r_ce0),
    .output_r_we0(grp_dut_dense_fu_217_output_r_we0),
    .output_r_d0(grp_dut_dense_fu_217_output_r_d0)
);

dut_conv grp_dut_conv_fu_227(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_conv_fu_227_ap_start),
    .ap_done(grp_dut_conv_fu_227_ap_done),
    .ap_idle(grp_dut_conv_fu_227_ap_idle),
    .ap_ready(grp_dut_conv_fu_227_ap_ready),
    .input_r_address0(grp_dut_conv_fu_227_input_r_address0),
    .input_r_ce0(grp_dut_conv_fu_227_input_r_ce0),
    .input_r_q0(grp_dut_conv_fu_227_input_r_q0),
    .output_r_address0(grp_dut_conv_fu_227_output_r_address0),
    .output_r_ce0(grp_dut_conv_fu_227_output_r_ce0),
    .output_r_we0(grp_dut_conv_fu_227_output_r_we0),
    .output_r_d0(grp_dut_conv_fu_227_output_r_d0),
    .threshold_V_address0(grp_dut_conv_fu_227_threshold_V_address0),
    .threshold_V_ce0(grp_dut_conv_fu_227_threshold_V_ce0),
    .threshold_V_q0(grp_dut_conv_fu_227_threshold_V_q0),
    .M(grp_dut_conv_fu_227_M),
    .N(grp_dut_conv_fu_227_N),
    .I(grp_dut_conv_fu_227_I),
    .L(grp_dut_conv_fu_227_L)
);

dut_max_pool grp_dut_max_pool_fu_252(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_max_pool_fu_252_ap_start),
    .ap_done(grp_dut_max_pool_fu_252_ap_done),
    .ap_idle(grp_dut_max_pool_fu_252_ap_idle),
    .ap_ready(grp_dut_max_pool_fu_252_ap_ready),
    .input_r_address0(grp_dut_max_pool_fu_252_input_r_address0),
    .input_r_ce0(grp_dut_max_pool_fu_252_input_r_ce0),
    .input_r_q0(grp_dut_max_pool_fu_252_input_r_q0),
    .output_r_address0(grp_dut_max_pool_fu_252_output_r_address0),
    .output_r_ce0(grp_dut_max_pool_fu_252_output_r_ce0),
    .output_r_we0(grp_dut_max_pool_fu_252_output_r_we0),
    .output_r_d0(grp_dut_max_pool_fu_252_output_r_d0),
    .M(grp_dut_max_pool_fu_252_M),
    .I(grp_dut_max_pool_fu_252_I)
);

dut_pad grp_dut_pad_fu_264(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_pad_fu_264_ap_start),
    .ap_done(grp_dut_pad_fu_264_ap_done),
    .ap_idle(grp_dut_pad_fu_264_ap_idle),
    .ap_ready(grp_dut_pad_fu_264_ap_ready),
    .input_r_address0(grp_dut_pad_fu_264_input_r_address0),
    .input_r_ce0(grp_dut_pad_fu_264_input_r_ce0),
    .input_r_q0(grp_dut_pad_fu_264_input_r_q0),
    .output_r_address0(grp_dut_pad_fu_264_output_r_address0),
    .output_r_ce0(grp_dut_pad_fu_264_output_r_ce0),
    .output_r_we0(grp_dut_pad_fu_264_output_r_we0),
    .output_r_d0(grp_dut_pad_fu_264_output_r_d0),
    .M(grp_dut_pad_fu_264_M),
    .I(grp_dut_pad_fu_264_I)
);

dut_reshape grp_dut_reshape_fu_278(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_reshape_fu_278_ap_start),
    .ap_done(grp_dut_reshape_fu_278_ap_done),
    .ap_idle(grp_dut_reshape_fu_278_ap_idle),
    .ap_ready(grp_dut_reshape_fu_278_ap_ready),
    .input_r_address0(grp_dut_reshape_fu_278_input_r_address0),
    .input_r_ce0(grp_dut_reshape_fu_278_input_r_ce0),
    .input_r_q0(mem_conv2_q0),
    .output_r_address0(grp_dut_reshape_fu_278_output_r_address0),
    .output_r_ce0(grp_dut_reshape_fu_278_output_r_ce0),
    .output_r_we0(grp_dut_reshape_fu_278_output_r_we0),
    .output_r_d0(grp_dut_reshape_fu_278_output_r_d0)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_284_p0),
    .din1(grp_fu_284_p1),
    .ce(1'b1),
    .dout(grp_fu_284_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_290_p0),
    .din1(grp_fu_290_p1),
    .ce(1'b1),
    .dout(grp_fu_290_p2)
);

dut_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_sitofp_32ns_32_6_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .ce(1'b1),
    .dout(grp_fu_297_p1)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U31(
    .din0(reg_310),
    .din1(ap_const_lv32_0),
    .opcode(ap_const_lv5_2),
    .dout(tmp_15_fu_300_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_conv_fu_227_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8))) begin
            ap_reg_grp_dut_conv_fu_227_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_conv_fu_227_ap_ready)) begin
            ap_reg_grp_dut_conv_fu_227_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_dense_fu_217_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond3_fu_320_p2))) begin
            ap_reg_grp_dut_dense_fu_217_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_dense_fu_217_ap_ready)) begin
            ap_reg_grp_dut_dense_fu_217_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_max_pool_fu_252_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
            ap_reg_grp_dut_max_pool_fu_252_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_max_pool_fu_252_ap_ready)) begin
            ap_reg_grp_dut_max_pool_fu_252_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_pad_fu_264_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
            ap_reg_grp_dut_pad_fu_264_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_pad_fu_264_ap_ready)) begin
            ap_reg_grp_dut_pad_fu_264_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_reshape_fu_278_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
            ap_reg_grp_dut_reshape_fu_278_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_reshape_fu_278_ap_ready)) begin
            ap_reg_grp_dut_reshape_fu_278_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= ap_const_lv32_0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & ~(1'b0 == exitcond_fu_438_p2))) begin
            ap_return_preg <= agg_result_V_reg_194;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        agg_result_V_reg_194 <= val_assign_agg_result_V_fu_455_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st48_fsm_47) & ~(1'b0 == grp_dut_dense_fu_217_ap_done))) begin
        agg_result_V_reg_194 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond3_fu_320_p2))) begin
        m_i_reg_183 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        m_i_reg_183 <= m_reg_478;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        max_id_V_reg_206 <= i_reg_546;
    end else if (((1'b1 == ap_sig_cseq_ST_st48_fsm_47) & ~(1'b0 == grp_dut_dense_fu_217_ap_done))) begin
        max_id_V_reg_206 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        n_i_reg_159 <= n_reg_470;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~(1'b0 == grp_dut_reshape_fu_278_ap_done))) begin
        n_i_reg_159 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond3_fu_320_p2))) begin
        one_out_i_reg_171 <= ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        one_out_i_reg_171 <= grp_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        b_fc1_load_reg_523 <= b_fc1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & (1'b0 == exitcond_fu_438_p2))) begin
        i_reg_546 <= i_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        m_reg_478 <= m_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        max_id_V_cast2_reg_533[3 : 0] <= max_id_V_cast2_fu_434_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        n_i_cast6_reg_462[8 : 0] <= n_i_cast6_fu_316_p1[8 : 0];
        n_reg_470 <= n_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st31_fsm_30) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39))) begin
        reg_305 <= grp_fu_290_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) | (1'b1 == ap_sig_cseq_ST_st45_fsm_44))) begin
        reg_310 <= grp_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        tmp_16_reg_528 <= tmp_16_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_20_i_reg_493 <= tmp_20_i_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        tmp_22_i_reg_503 <= grp_fu_297_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        tmp_25_i_reg_513[8 : 0] <= tmp_25_i_fu_387_p1[8 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & ~(1'b0 == exitcond_fu_438_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & ~(1'b0 == exitcond_fu_438_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st49_fsm_48) & ~(1'b0 == exitcond_fu_438_p2))) begin
        ap_return = agg_result_V_reg_194;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_439) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_477) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_492) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_530) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_355) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_150) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_161) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_187) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_67) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_196) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_546) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_204) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_514) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_116) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_553) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_133) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_572) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_213) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_417) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_123) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_560) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_140) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_225) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_365) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_382) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_234) begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st49_fsm_48 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_432) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_250) begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_470) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_485) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_506) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_521) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_424) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        b_fc1_ce0 = 1'b1;
    end else begin
        b_fc1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_dut_conv_fu_227_I = ap_const_lv6_A;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_conv_fu_227_I = ap_const_lv6_12;
    end else begin
        grp_dut_conv_fu_227_I = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_dut_conv_fu_227_L = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_conv_fu_227_L = 1'b0;
    end else begin
        grp_dut_conv_fu_227_L = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_dut_conv_fu_227_M = ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_conv_fu_227_M = ap_const_lv7_1;
    end else begin
        grp_dut_conv_fu_227_M = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_dut_conv_fu_227_N = ap_const_lv7_20;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_conv_fu_227_N = ap_const_lv7_10;
    end else begin
        grp_dut_conv_fu_227_N = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_dut_conv_fu_227_input_r_q0 = mem_conv2_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_conv_fu_227_input_r_q0 = mem_conv1_q0;
    end else begin
        grp_dut_conv_fu_227_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        grp_dut_conv_fu_227_threshold_V_q0 = threshold2_V_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        grp_dut_conv_fu_227_threshold_V_q0 = threshold1_V_q0;
    end else begin
        grp_dut_conv_fu_227_threshold_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_dut_max_pool_fu_252_I = ap_const_lv6_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_max_pool_fu_252_I = ap_const_lv6_10;
    end else begin
        grp_dut_max_pool_fu_252_I = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_dut_max_pool_fu_252_M = ap_const_lv7_20;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_max_pool_fu_252_M = ap_const_lv7_10;
    end else begin
        grp_dut_max_pool_fu_252_M = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        grp_dut_max_pool_fu_252_input_r_q0 = mem_conv1_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_dut_max_pool_fu_252_input_r_q0 = mem_conv2_q0;
    end else begin
        grp_dut_max_pool_fu_252_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_dut_pad_fu_264_I = ap_const_lv6_8;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_pad_fu_264_I = ap_const_lv6_10;
    end else begin
        grp_dut_pad_fu_264_I = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_dut_pad_fu_264_M = ap_const_lv7_10;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_pad_fu_264_M = ap_const_lv7_1;
    end else begin
        grp_dut_pad_fu_264_M = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_dut_pad_fu_264_input_r_q0 = mem_conv1_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_dut_pad_fu_264_input_r_q0 = input_r_q0;
    end else begin
        grp_dut_pad_fu_264_input_r_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40))) begin
        grp_fu_284_p0 = reg_305;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_284_p0 = one_out_i_reg_171;
    end else begin
        grp_fu_284_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        grp_fu_284_p1 = b_fc1_load_reg_523;
    end else if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_284_p1 = ap_const_lv32_C4000000;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        grp_fu_284_p1 = tmp_22_i_reg_503;
    end else begin
        grp_fu_284_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_290_p0 = reg_310;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_290_p0 = one_out_i_reg_171;
    end else begin
        grp_fu_290_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        grp_fu_290_p1 = ap_const_lv32_3D800000;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_290_p1 = ap_const_lv32_40000000;
    end else begin
        grp_fu_290_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st49_fsm_48)) begin
        mem_conv1_address0 = tmp_fu_444_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        mem_conv1_address0 = tmp_18_i_fu_361_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        mem_conv1_address0 = grp_dut_reshape_fu_278_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mem_conv1_address0 = grp_dut_pad_fu_264_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mem_conv1_address0 = grp_dut_pad_fu_264_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv1_address0 = grp_dut_max_pool_fu_252_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        mem_conv1_address0 = grp_dut_max_pool_fu_252_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv1_address0 = grp_dut_conv_fu_227_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mem_conv1_address0 = grp_dut_conv_fu_227_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv1_address0 = grp_dut_dense_fu_217_output_r_address0;
    end else begin
        mem_conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st16_fsm_15) | (1'b1 == ap_sig_cseq_ST_st49_fsm_48))) begin
        mem_conv1_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        mem_conv1_ce0 = grp_dut_reshape_fu_278_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mem_conv1_ce0 = grp_dut_pad_fu_264_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mem_conv1_ce0 = grp_dut_pad_fu_264_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv1_ce0 = grp_dut_max_pool_fu_252_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        mem_conv1_ce0 = grp_dut_max_pool_fu_252_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv1_ce0 = grp_dut_conv_fu_227_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mem_conv1_ce0 = grp_dut_conv_fu_227_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv1_ce0 = grp_dut_dense_fu_217_output_r_ce0;
    end else begin
        mem_conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        mem_conv1_d0 = grp_dut_reshape_fu_278_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mem_conv1_d0 = grp_dut_pad_fu_264_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv1_d0 = grp_dut_max_pool_fu_252_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv1_d0 = grp_dut_conv_fu_227_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv1_d0 = grp_dut_dense_fu_217_output_r_d0;
    end else begin
        mem_conv1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        mem_conv1_we0 = grp_dut_reshape_fu_278_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        mem_conv1_we0 = grp_dut_pad_fu_264_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv1_we0 = grp_dut_max_pool_fu_252_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv1_we0 = grp_dut_conv_fu_227_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv1_we0 = grp_dut_dense_fu_217_output_r_we0;
    end else begin
        mem_conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        mem_conv2_address0 = tmp_25_i_reg_513;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        mem_conv2_address0 = grp_dut_reshape_fu_278_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mem_conv2_address0 = grp_dut_pad_fu_264_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        mem_conv2_address0 = grp_dut_max_pool_fu_252_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv2_address0 = grp_dut_max_pool_fu_252_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mem_conv2_address0 = grp_dut_conv_fu_227_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv2_address0 = grp_dut_conv_fu_227_input_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv2_address0 = grp_dut_dense_fu_217_input_r_address0;
    end else begin
        mem_conv2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        mem_conv2_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        mem_conv2_ce0 = grp_dut_reshape_fu_278_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mem_conv2_ce0 = grp_dut_pad_fu_264_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        mem_conv2_ce0 = grp_dut_max_pool_fu_252_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        mem_conv2_ce0 = grp_dut_max_pool_fu_252_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mem_conv2_ce0 = grp_dut_conv_fu_227_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        mem_conv2_ce0 = grp_dut_conv_fu_227_input_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        mem_conv2_ce0 = grp_dut_dense_fu_217_input_r_ce0;
    end else begin
        mem_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        mem_conv2_d0 = tmp_16_reg_528;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mem_conv2_d0 = grp_dut_pad_fu_264_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        mem_conv2_d0 = grp_dut_max_pool_fu_252_output_r_d0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mem_conv2_d0 = grp_dut_conv_fu_227_output_r_d0;
    end else begin
        mem_conv2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        mem_conv2_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mem_conv2_we0 = grp_dut_pad_fu_264_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        mem_conv2_we0 = grp_dut_max_pool_fu_252_output_r_we0;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mem_conv2_we0 = grp_dut_conv_fu_227_output_r_we0;
    end else begin
        mem_conv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        w_fc1_ce0 = 1'b1;
    end else begin
        w_fc1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == grp_dut_pad_fu_264_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == grp_dut_conv_fu_227_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == grp_dut_max_pool_fu_252_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            if (~(1'b0 == grp_dut_pad_fu_264_ap_done)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            if (~(1'b0 == grp_dut_conv_fu_227_ap_done)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            if (~(1'b0 == grp_dut_max_pool_fu_252_ap_done)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            if (~(1'b0 == grp_dut_reshape_fu_278_ap_done)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st15_fsm_14 : begin
            if (~(1'b0 == exitcond3_fu_320_p2)) begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st16_fsm_15 : begin
            if (~(exitcond2_fu_332_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st29_fsm_28;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st48_fsm_47 : begin
            if (~(1'b0 == grp_dut_dense_fu_217_ap_done)) begin
                ap_NS_fsm = ap_ST_st49_fsm_48;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end
        end
        ap_ST_st49_fsm_48 : begin
            if (~(1'b0 == exitcond_fu_438_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_116 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_123 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_133 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_140 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_150 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_161 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_187 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_196 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_204 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_213 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_225 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_234 = (1'b1 == ap_CS_fsm[ap_const_lv32_30]);
end

always @ (*) begin
    ap_sig_250 = (1'b1 == ap_CS_fsm[ap_const_lv32_31]);
end

always @ (*) begin
    ap_sig_355 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_365 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_382 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_417 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_424 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_432 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_439 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_470 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_477 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_485 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_492 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_506 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_514 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_521 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_530 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_546 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_553 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_560 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_572 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_67 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign b_fc1_address0 = tmp_25_i_fu_387_p1;

assign biased_to_int_fu_392_p1 = reg_310;

assign exitcond2_fu_332_p2 = ((m_i_reg_183 == ap_const_lv10_200) ? 1'b1 : 1'b0);

assign exitcond3_fu_320_p2 = ((n_i_reg_159 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_438_p2 = ((max_id_V_reg_206 == ap_const_lv4_A) ? 1'b1 : 1'b0);

assign grp_dut_conv_fu_227_ap_start = ap_reg_grp_dut_conv_fu_227_ap_start;

assign grp_dut_dense_fu_217_ap_start = ap_reg_grp_dut_dense_fu_217_ap_start;

assign grp_dut_max_pool_fu_252_ap_start = ap_reg_grp_dut_max_pool_fu_252_ap_start;

assign grp_dut_pad_fu_264_ap_start = ap_reg_grp_dut_pad_fu_264_ap_start;

assign grp_dut_reshape_fu_278_ap_start = ap_reg_grp_dut_reshape_fu_278_ap_start;

assign grp_fu_297_p0 = tmp_20_i_reg_493;

assign i_fu_449_p2 = (max_id_V_reg_206 + ap_const_lv4_1);

assign input_r_address0 = grp_dut_pad_fu_264_input_r_address0;

assign input_r_ce0 = grp_dut_pad_fu_264_input_r_ce0;

assign m_fu_338_p2 = (m_i_reg_183 + ap_const_lv10_1);

assign max_id_V_cast2_fu_434_p1 = max_id_V_reg_206;

assign n_fu_326_p2 = (n_i_reg_159 + ap_const_lv9_1);

assign n_i_cast6_fu_316_p1 = n_i_reg_159;

assign notlhs_fu_410_p2 = ((tmp_12_fu_396_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_416_p2 = ((tmp_31_fu_406_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign tmp1_fu_371_p2 = (w_fc1_q0 ^ 1'b1);

assign tmp_12_fu_396_p4 = {{biased_to_int_fu_392_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_14_fu_422_p2 = (notrhs_fu_416_p2 | notlhs_fu_410_p2);

assign tmp_16_fu_428_p2 = (tmp_14_fu_422_p2 & tmp_15_fu_300_p2);

assign tmp_17_i_fu_348_p3 = {{tmp_32_fu_344_p1}, {ap_const_lv8_0}};

assign tmp_18_i_fu_361_p1 = m_i_reg_183;

assign tmp_19_i_fu_366_p1 = w_index_fu_356_p2;

assign tmp_20_i_fu_377_p2 = (mem_conv1_q0 ^ tmp1_fu_371_p2);

assign tmp_25_i_fu_387_p1 = n_i_reg_159;

assign tmp_31_fu_406_p1 = biased_to_int_fu_392_p1[22:0];

assign tmp_32_fu_344_p1 = m_i_reg_183[8:0];

assign tmp_fu_444_p1 = max_id_V_reg_206;

assign val_assign_agg_result_V_fu_455_p3 = ((mem_conv1_q0[0:0] === 1'b1) ? max_id_V_cast2_reg_533 : agg_result_V_reg_194);

assign w_fc1_address0 = tmp_19_i_fu_366_p1;

assign w_index_fu_356_p2 = (n_i_cast6_reg_462 + tmp_17_i_fu_348_p3);

always @ (posedge ap_clk) begin
    n_i_cast6_reg_462[16:9] <= 8'b00000000;
    tmp_25_i_reg_513[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    max_id_V_cast2_reg_533[31:4] <= 28'b0000000000000000000000000000;
end

endmodule //dut_bnn_xcel
