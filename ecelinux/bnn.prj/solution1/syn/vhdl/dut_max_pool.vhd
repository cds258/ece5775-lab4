-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_max_pool is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    M : IN STD_LOGIC_VECTOR (6 downto 0);
    I : IN STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of dut_max_pool is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1440 : STD_LOGIC_VECTOR (12 downto 0) := "1010001000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_28 : BOOLEAN;
    signal O_fu_207_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal O_reg_431 : STD_LOGIC_VECTOR (3 downto 0);
    signal O_cast10_cast1_fu_217_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal O_cast10_cast1_reg_437 : STD_LOGIC_VECTOR (10 downto 0);
    signal O_cast10_cast_fu_221_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal O_cast10_cast_reg_442 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_fu_231_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_68 : BOOLEAN;
    signal I_cast2_fu_242_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal I_cast2_reg_455 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond3_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal I_cast_fu_245_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal I_cast_reg_460 : STD_LOGIC_VECTOR (12 downto 0);
    signal next_mul_fu_248_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal next_mul_reg_465 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_86 : BOOLEAN;
    signal m_2_fu_266_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal m_2_reg_473 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_272_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_478 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_cast6_fu_277_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_cast6_reg_483 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_103 : BOOLEAN;
    signal x_3_fu_286_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_3_reg_491 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_cast_fu_298_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_cast_reg_496 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond4_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_3_fu_311_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_3_reg_504 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_119 : BOOLEAN;
    signal tmp7_fu_326_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp7_reg_509 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_index_fu_331_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal o_index_reg_514 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_133 : BOOLEAN;
    signal tmp_6_cast_fu_341_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_6_cast_reg_519 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_cast4_fu_345_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_cast4_reg_524 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_144 : BOOLEAN;
    signal c_2_fu_355_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_2_reg_532 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_1_fu_375_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_1_reg_540 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_155 : BOOLEAN;
    signal tmp8_fu_387_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp8_reg_545 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_fu_395_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp9_reg_550 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_169 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_178 : BOOLEAN;
    signal p_max_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_187 : BOOLEAN;
    signal i_reg_103 : STD_LOGIC_VECTOR (12 downto 0);
    signal m_reg_114 : STD_LOGIC_VECTOR (5 downto 0);
    signal phi_mul_reg_125 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_reg_137 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_reg_148 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond1_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_reg_160 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_reg_173 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_1_reg_184 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_reg_196 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_s_fu_237_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_cast_fu_257_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_272_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_272_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_fu_292_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_cast5_fu_302_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_317_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_326_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp7_fu_326_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_335_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_cast3_fu_365_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp1_fu_381_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp9_fu_395_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp9_fu_395_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp2_fu_400_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_index_fu_404_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp7_fu_326_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp9_fu_395_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_2_fu_272_p10 : STD_LOGIC_VECTOR (7 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_369_p2)))) then 
                c_reg_173 <= c_2_reg_532;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                c_reg_173 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_103_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond3_fu_225_p2 = ap_const_lv1_0))) then 
                i_reg_103 <= i_2_fu_231_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_103 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    m_reg_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_281_p2)))) then 
                m_reg_114 <= m_2_reg_473;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond3_fu_225_p2 = ap_const_lv1_0)))) then 
                m_reg_114 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    max_1_reg_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_349_p2))) then 
                max_1_reg_184 <= max_reg_160;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                max_1_reg_184 <= p_max_1_fu_414_p2;
            end if; 
        end if;
    end process;

    max_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_369_p2)))) then 
                max_reg_160 <= max_1_reg_184;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                max_reg_160 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond4_fu_281_p2)))) then 
                phi_mul_reg_125 <= next_mul_reg_465;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond3_fu_225_p2 = ap_const_lv1_0)))) then 
                phi_mul_reg_125 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    r_reg_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond1_fu_349_p2))) then 
                r_reg_196 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                r_reg_196 <= r_1_reg_540;
            end if; 
        end if;
    end process;

    x_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond2_fu_306_p2)))) then 
                x_reg_137 <= x_3_reg_491;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_9_fu_261_p2)))) then 
                x_reg_137 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    y_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond4_fu_281_p2))) then 
                y_reg_148 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond1_fu_349_p2)))) then 
                y_reg_148 <= y_3_reg_504;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond3_fu_225_p2 = ap_const_lv1_0)))) then
                    I_cast2_reg_455(5 downto 0) <= I_cast2_fu_242_p1(5 downto 0);
                    I_cast_reg_460(5 downto 0) <= I_cast_fu_245_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                    O_cast10_cast1_reg_437(3 downto 0) <= O_cast10_cast1_fu_217_p1(3 downto 0);
                    O_cast10_cast_reg_442(3 downto 0) <= O_cast10_cast_fu_221_p1(3 downto 0);
                O_reg_431 <= I(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                c_2_reg_532 <= c_2_fu_355_p2;
                    c_cast4_reg_524(1 downto 0) <= c_cast4_fu_345_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                m_2_reg_473 <= m_2_fu_266_p2;
                next_mul_reg_465 <= next_mul_fu_248_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                o_index_reg_514 <= o_index_fu_331_p2;
                    tmp_6_cast_reg_519(3 downto 1) <= tmp_6_cast_fu_341_p1(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                r_1_reg_540 <= r_1_fu_375_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond2_fu_306_p2))) then
                tmp7_reg_509 <= tmp7_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_fu_369_p2))) then
                tmp8_reg_545 <= tmp8_fu_387_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                tmp9_reg_550 <= tmp9_fu_395_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_9_fu_261_p2)))) then
                tmp_2_reg_478 <= tmp_2_fu_272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond4_fu_281_p2))) then
                    tmp_5_cast_reg_496(3 downto 1) <= tmp_5_cast_fu_298_p1(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                x_3_reg_491 <= x_3_fu_286_p2;
                    x_cast6_reg_483(3 downto 0) <= x_cast6_fu_277_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                y_3_reg_504 <= y_3_fu_311_p2;
            end if;
        end if;
    end process;
    O_cast10_cast1_reg_437(10 downto 4) <= "0000000";
    O_cast10_cast_reg_442(7 downto 4) <= "0000";
    I_cast2_reg_455(8 downto 6) <= "000";
    I_cast_reg_460(12 downto 6) <= "0000000";
    x_cast6_reg_483(10 downto 4) <= "0000000";
    tmp_5_cast_reg_496(0) <= '0';
    tmp_5_cast_reg_496(12 downto 4) <= "000000000";
    tmp_6_cast_reg_519(0) <= '0';
    tmp_6_cast_reg_519(8 downto 4) <= "00000";
    c_cast4_reg_524(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond3_fu_225_p2, tmp_9_fu_261_p2, exitcond4_fu_281_p2, exitcond2_fu_306_p2, exitcond_fu_369_p2, exitcond1_fu_349_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond3_fu_225_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_9_fu_261_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                if ((ap_const_lv1_0 = exitcond4_fu_281_p2)) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st5_fsm_4 => 
                if ((ap_const_lv1_0 = exitcond2_fu_306_p2)) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_349_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if ((ap_const_lv1_0 = exitcond_fu_369_p2)) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    I_cast2_fu_242_p1 <= std_logic_vector(resize(unsigned(I),9));
    I_cast_fu_245_p1 <= std_logic_vector(resize(unsigned(I),13));
    O_cast10_cast1_fu_217_p1 <= std_logic_vector(resize(unsigned(O_fu_207_p4),11));
    O_cast10_cast_fu_221_p1 <= std_logic_vector(resize(unsigned(O_fu_207_p4),8));
    O_fu_207_p4 <= I(4 downto 1);

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2, tmp_9_fu_261_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_9_fu_261_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_9_fu_261_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_9_fu_261_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_103_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_103 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_119 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_133_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_133 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_144_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_144 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_155_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_155 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_169_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_169 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_178_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_178 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_187_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_187 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_28_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_28 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_68_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_68 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_86_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_86 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_178)
    begin
        if (ap_sig_178) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_187)
    begin
        if (ap_sig_187) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_28)
    begin
        if (ap_sig_28) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_68)
    begin
        if (ap_sig_68) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_86)
    begin
        if (ap_sig_86) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_103)
    begin
        if (ap_sig_103) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_119)
    begin
        if (ap_sig_119) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_133)
    begin
        if (ap_sig_133) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_144)
    begin
        if (ap_sig_144) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_155)
    begin
        if (ap_sig_155) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_169)
    begin
        if (ap_sig_169) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    c_2_fu_355_p2 <= std_logic_vector(unsigned(c_reg_173) + unsigned(ap_const_lv2_1));
    c_cast4_fu_345_p1 <= std_logic_vector(resize(unsigned(c_reg_173),13));
    exitcond1_fu_349_p2 <= "1" when (c_reg_173 = ap_const_lv2_2) else "0";
    exitcond2_fu_306_p2 <= "1" when (y_reg_148 = O_reg_431) else "0";
    exitcond3_fu_225_p2 <= "1" when (i_reg_103 = ap_const_lv13_1440) else "0";
    exitcond4_fu_281_p2 <= "1" when (x_reg_137 = O_reg_431) else "0";
    exitcond_fu_369_p2 <= "1" when (r_reg_196 = ap_const_lv2_2) else "0";
    i_2_fu_231_p2 <= std_logic_vector(unsigned(i_reg_103) + unsigned(ap_const_lv13_1));
    i_index_fu_404_p2 <= std_logic_vector(unsigned(c_cast4_reg_524) + unsigned(tmp2_fu_400_p2));
    input_r_address0 <= tmp_1_fu_409_p1(13 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    m_2_fu_266_p2 <= std_logic_vector(unsigned(m_reg_114) + unsigned(ap_const_lv6_1));
    m_cast_fu_257_p1 <= std_logic_vector(resize(unsigned(m_reg_114),7));
    next_mul_fu_248_p2 <= std_logic_vector(unsigned(phi_mul_reg_125) + unsigned(I_cast2_reg_455));
    o_index_fu_331_p2 <= std_logic_vector(unsigned(tmp7_reg_509) + unsigned(x_cast6_reg_483));

    output_r_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, tmp_s_fu_237_p1, tmp_7_fu_361_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            output_r_address0 <= tmp_7_fu_361_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            output_r_address0 <= tmp_s_fu_237_p1(13 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st7_fsm_6, max_reg_160)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            output_r_d0 <= max_reg_160;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            output_r_d0 <= ap_const_lv1_0;
        else 
            output_r_d0 <= "X";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond3_fu_225_p2, ap_sig_cseq_ST_st7_fsm_6, exitcond1_fu_349_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond3_fu_225_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond1_fu_349_p2))))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_max_1_fu_414_p2 <= (input_r_q0 or max_1_reg_184);
    r_1_fu_375_p2 <= std_logic_vector(unsigned(r_reg_196) + unsigned(ap_const_lv2_1));
    r_cast3_fu_365_p1 <= std_logic_vector(resize(unsigned(r_reg_196),9));
    tmp1_fu_381_p2 <= std_logic_vector(unsigned(r_cast3_fu_365_p1) + unsigned(phi_mul_reg_125));
    tmp2_fu_400_p2 <= std_logic_vector(unsigned(tmp9_reg_550) + unsigned(tmp_5_cast_reg_496));
    tmp7_fu_326_p0 <= tmp7_fu_326_p00(8 - 1 downto 0);
    tmp7_fu_326_p00 <= std_logic_vector(resize(unsigned(tmp_fu_317_p2),11));
    tmp7_fu_326_p1 <= O_cast10_cast1_reg_437(4 - 1 downto 0);
    tmp7_fu_326_p2 <= std_logic_vector(resize(unsigned(tmp7_fu_326_p0) * unsigned(tmp7_fu_326_p1), 11));
    tmp8_fu_387_p2 <= std_logic_vector(unsigned(tmp_6_cast_reg_519) + unsigned(tmp1_fu_381_p2));
    tmp9_fu_395_p0 <= I_cast_reg_460(6 - 1 downto 0);
    tmp9_fu_395_p1 <= tmp9_fu_395_p10(9 - 1 downto 0);
    tmp9_fu_395_p10 <= std_logic_vector(resize(unsigned(tmp8_reg_545),13));
    tmp9_fu_395_p2 <= std_logic_vector(resize(unsigned(tmp9_fu_395_p0) * unsigned(tmp9_fu_395_p1), 13));
    tmp_10_fu_335_p2 <= std_logic_vector(shift_left(unsigned(y_reg_148),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    tmp_1_fu_409_p1 <= std_logic_vector(resize(unsigned(i_index_fu_404_p2),64));
    tmp_2_fu_272_p0 <= O_cast10_cast_reg_442(4 - 1 downto 0);
    tmp_2_fu_272_p1 <= tmp_2_fu_272_p10(6 - 1 downto 0);
    tmp_2_fu_272_p10 <= std_logic_vector(resize(unsigned(m_reg_114),8));
    tmp_2_fu_272_p2 <= std_logic_vector(resize(unsigned(tmp_2_fu_272_p0) * unsigned(tmp_2_fu_272_p1), 8));
    tmp_5_cast_fu_298_p1 <= std_logic_vector(resize(unsigned(tmp_8_fu_292_p2),13));
    tmp_6_cast_fu_341_p1 <= std_logic_vector(resize(unsigned(tmp_10_fu_335_p2),9));
    tmp_7_fu_361_p1 <= std_logic_vector(resize(unsigned(o_index_reg_514),64));
    tmp_8_fu_292_p2 <= std_logic_vector(shift_left(unsigned(x_reg_137),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    tmp_9_fu_261_p2 <= "1" when (signed(m_cast_fu_257_p1) < signed(M)) else "0";
    tmp_fu_317_p2 <= std_logic_vector(unsigned(y_cast5_fu_302_p1) + unsigned(tmp_2_reg_478));
    tmp_s_fu_237_p1 <= std_logic_vector(resize(unsigned(i_reg_103),64));
    x_3_fu_286_p2 <= std_logic_vector(unsigned(x_reg_137) + unsigned(ap_const_lv4_1));
    x_cast6_fu_277_p1 <= std_logic_vector(resize(unsigned(x_reg_137),11));
    y_3_fu_311_p2 <= std_logic_vector(unsigned(y_reg_148) + unsigned(ap_const_lv4_1));
    y_cast5_fu_302_p1 <= std_logic_vector(resize(unsigned(y_reg_148),8));
end behav;
