-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dut_conv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (0 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (0 downto 0);
    threshold_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    threshold_V_ce0 : OUT STD_LOGIC;
    threshold_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    M : IN STD_LOGIC_VECTOR (6 downto 0);
    N : IN STD_LOGIC_VECTOR (6 downto 0);
    I : IN STD_LOGIC_VECTOR (5 downto 0);
    L : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dut_conv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_29 : BOOLEAN;
    signal w_conv1_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_conv1_ce0 : STD_LOGIC;
    signal w_conv1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_conv2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal w_conv2_ce0 : STD_LOGIC;
    signal w_conv2_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal L_read_read_fu_88_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal O_fu_327_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal O_reg_744 : STD_LOGIC_VECTOR (4 downto 0);
    signal O_cast25_cast_fu_333_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal O_cast25_cast_reg_750 : STD_LOGIC_VECTOR (12 downto 0);
    signal O_cast24_cast_fu_337_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal O_cast24_cast_reg_755 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_i_fu_341_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_reg_760 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_25_fu_347_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_25_reg_766 : STD_LOGIC_VECTOR (5 downto 0);
    signal I_cast5_fu_351_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal I_cast5_reg_771 : STD_LOGIC_VECTOR (8 downto 0);
    signal N_cast_fu_355_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal N_cast_reg_776 : STD_LOGIC_VECTOR (8 downto 0);
    signal I_cast_fu_359_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal I_cast_reg_781 : STD_LOGIC_VECTOR (12 downto 0);
    signal n_cast1_fu_363_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal n_cast1_reg_786 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_101 : BOOLEAN;
    signal n_2_fu_376_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal n_2_reg_794 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_382_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_14_reg_799 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_cast_fu_387_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_cast_reg_804 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_119 : BOOLEAN;
    signal x_4_fu_396_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_4_reg_812 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_cast_fu_402_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_cast_reg_817 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_130 : BOOLEAN;
    signal y_4_fu_411_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_4_reg_825 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp5_fu_426_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp5_reg_830 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond3_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_index_fu_431_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal o_index_reg_835 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_146 : BOOLEAN;
    signal next_mul4_fu_435_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal next_mul4_reg_840 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_155 : BOOLEAN;
    signal next_mul_fu_440_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal next_mul_reg_845 : STD_LOGIC_VECTOR (8 downto 0);
    signal m_4_fu_454_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_4_reg_853 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp9_cast_fu_487_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp9_cast_reg_858 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_15_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_reg_863 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_cast_fu_495_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_cast_reg_873 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_179 : BOOLEAN;
    signal c_3_fu_505_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_3_reg_881 : STD_LOGIC_VECTOR (1 downto 0);
    signal x_assign_cast_fu_517_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_assign_cast_reg_886 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond2_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_26_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_26_reg_891 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_i_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_i_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_1_fu_544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_2_fu_564_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_2_reg_909 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_203 : BOOLEAN;
    signal tmp6_fu_604_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp6_reg_914 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_929 : STD_LOGIC_VECTOR (0 downto 0);
    signal mac_num_2_fu_664_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal mac_num_2_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_index_fu_680_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_index_reg_939 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_231 : BOOLEAN;
    signal w_conv1_load_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_conv2_load_reg_949 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_246 : BOOLEAN;
    signal one_out_3_fu_716_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_256 : BOOLEAN;
    signal n_reg_172 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond1_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_reg_183 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_reg_195 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_278 : BOOLEAN;
    signal sum_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_reg_219 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul_reg_230 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_mul3_reg_242 : STD_LOGIC_VECTOR (8 downto 0);
    signal one_out_reg_253 : STD_LOGIC_VECTOR (31 downto 0);
    signal mac_num_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_reg_277 : STD_LOGIC_VECTOR (1 downto 0);
    signal one_out_1_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal mac_num_1_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_reg_312 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_323_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_cast_fu_367_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_382_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_382_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp4_fu_417_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp5_fu_426_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp5_fu_426_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal m_cast_fu_445_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_16_fu_460_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_469_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_cast_fu_477_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_cast1_fu_465_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp9_fu_481_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_assign_fu_511_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_20_fu_538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_cast1_fu_554_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal y_assign_fu_570_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_i_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notrhs_i_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_cast_fu_550_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp8_fu_598_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_fu_609_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl1_cast_fu_617_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_621_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp10_fu_627_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp10_cast_fu_632_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal w_index_fu_636_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_cond2_i_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mac_num_3_fu_647_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_675_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp7_fu_675_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp7_fu_675_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_pn_in_in_v_fu_689_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp11_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_pn_in_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_pn_fu_706_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal one_out_2_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp5_fu_426_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp7_fu_675_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_fu_382_p00 : STD_LOGIC_VECTOR (8 downto 0);

    component dut_conv_w_conv1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dut_conv_w_conv2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    w_conv1_U : component dut_conv_w_conv1
    generic map (
        DataWidth => 1,
        AddressRange => 4608,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_conv1_address0,
        ce0 => w_conv1_ce0,
        q0 => w_conv1_q0);

    w_conv2_U : component dut_conv_w_conv2
    generic map (
        DataWidth => 1,
        AddressRange => 4608,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w_conv2_address0,
        ce0 => w_conv2_ce0,
        q0 => w_conv2_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_558_p2)))) then 
                c_reg_277 <= c_3_reg_881;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_15_fu_449_p2)))) then 
                c_reg_277 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    m_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond2_fu_499_p2)))) then 
                m_reg_219 <= m_4_reg_853;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                m_reg_219 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    mac_num_1_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                mac_num_1_reg_300 <= mac_num_2_reg_934;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond2_fu_499_p2))) then 
                mac_num_1_reg_300 <= mac_num_reg_265;
            end if; 
        end if;
    end process;

    mac_num_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_558_p2)))) then 
                mac_num_reg_265 <= mac_num_1_reg_300;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_15_fu_449_p2)))) then 
                mac_num_reg_265 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    n_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond1_fu_391_p2)))) then 
                n_reg_172 <= n_2_reg_794;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                n_reg_172 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    one_out_1_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                one_out_1_reg_288 <= one_out_3_fu_716_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond2_fu_499_p2))) then 
                one_out_1_reg_288 <= one_out_reg_253;
            end if; 
        end if;
    end process;

    one_out_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond_fu_558_p2)))) then 
                one_out_reg_253 <= one_out_1_reg_288;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_15_fu_449_p2)))) then 
                one_out_reg_253 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul3_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond2_fu_499_p2)))) then 
                phi_mul3_reg_242 <= next_mul4_reg_840;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                phi_mul3_reg_242 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond2_fu_499_p2)))) then 
                phi_mul_reg_230 <= next_mul_reg_845;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                phi_mul_reg_230 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    r_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                r_reg_312 <= r_2_reg_909;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond2_fu_499_p2))) then 
                r_reg_312 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    sum_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = exitcond2_fu_499_p2)))) then 
                sum_reg_207 <= sum_1_fu_544_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                sum_reg_207 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    x_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = exitcond3_fu_406_p2)))) then 
                x_reg_183 <= x_4_reg_812;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_s_fu_371_p2 = ap_const_lv1_0)))) then 
                x_reg_183 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    y_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                y_reg_195 <= y_4_reg_825;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond1_fu_391_p2))) then 
                y_reg_195 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                    I_cast5_reg_771(5 downto 0) <= I_cast5_fu_351_p1(5 downto 0);
                    I_cast_reg_781(5 downto 0) <= I_cast_fu_359_p1(5 downto 0);
                    N_cast_reg_776(6 downto 0) <= N_cast_fu_355_p1(6 downto 0);
                    O_cast24_cast_reg_755(4 downto 0) <= O_cast24_cast_fu_337_p1(4 downto 0);
                    O_cast25_cast_reg_750(4 downto 0) <= O_cast25_cast_fu_333_p1(4 downto 0);
                O_reg_744 <= O_fu_327_p2;
                tmp_25_reg_766 <= tmp_25_fu_347_p1;
                tmp_i_reg_760 <= tmp_i_fu_341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then
                c_3_reg_881 <= c_3_fu_505_p2;
                    c_cast_reg_873(1 downto 0) <= c_cast_fu_495_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_lv1_0 = sel_tmp1_reg_929))) then
                i_index_reg_939 <= i_index_fu_680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                m_4_reg_853 <= m_4_fu_454_p2;
                next_mul4_reg_840 <= next_mul4_fu_435_p2;
                next_mul_reg_845 <= next_mul_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond_fu_558_p2))) then
                mac_num_2_reg_934 <= mac_num_2_fu_664_p3;
                sel_tmp1_reg_929 <= sel_tmp1_fu_659_p2;
                tmp6_reg_914 <= tmp6_fu_604_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                n_2_reg_794 <= n_2_fu_376_p2;
                    n_cast1_reg_786(5 downto 0) <= n_cast1_fu_363_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = exitcond2_fu_499_p2))) then
                notlhs_i_reg_896 <= notlhs_i_fu_527_p2;
                tmp_i_26_reg_891 <= tmp_i_26_fu_521_p2;
                    x_assign_cast_reg_886(4 downto 0) <= x_assign_cast_fu_517_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                o_index_reg_835 <= o_index_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                r_2_reg_909 <= r_2_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = exitcond3_fu_406_p2))) then
                tmp5_reg_830 <= tmp5_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_15_fu_449_p2)))) then
                    tmp9_cast_reg_858(12 downto 0) <= tmp9_cast_fu_487_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_s_fu_371_p2 = ap_const_lv1_0)))) then
                tmp_14_reg_799 <= tmp_14_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and (ap_const_lv1_0 = tmp_15_fu_449_p2))) then
                    tmp_17_reg_863(12 downto 0) <= tmp_17_fu_491_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((L_read_read_fu_88_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then
                w_conv1_load_reg_944 <= w_conv1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((L_read_read_fu_88_p2 = ap_const_lv1_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then
                w_conv2_load_reg_949 <= w_conv2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                x_4_reg_812 <= x_4_fu_396_p2;
                    x_cast_reg_804(4 downto 0) <= x_cast_fu_387_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                y_4_reg_825 <= y_4_fu_411_p2;
                    y_cast_reg_817(4 downto 0) <= y_cast_fu_402_p1(4 downto 0);
            end if;
        end if;
    end process;
    O_cast25_cast_reg_750(12 downto 5) <= "00000000";
    O_cast24_cast_reg_755(8 downto 5) <= "0000";
    I_cast5_reg_771(8 downto 6) <= "000";
    N_cast_reg_776(8 downto 7) <= "00";
    I_cast_reg_781(12 downto 6) <= "0000000";
    n_cast1_reg_786(8 downto 6) <= "000";
    x_cast_reg_804(12 downto 5) <= "00000000";
    y_cast_reg_817(8 downto 5) <= "0000";
    tmp9_cast_reg_858(13) <= '0';
    tmp_17_reg_863(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    c_cast_reg_873(4 downto 2) <= "000";
    x_assign_cast_reg_886(12 downto 5) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_s_fu_371_p2, exitcond3_fu_406_p2, tmp_15_fu_449_p2, exitcond2_fu_499_p2, exitcond_fu_558_p2, exitcond1_fu_391_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_s_fu_371_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_391_p2))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = exitcond3_fu_406_p2))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = tmp_15_fu_449_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = exitcond2_fu_499_p2))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = exitcond_fu_558_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    I_cast5_fu_351_p1 <= std_logic_vector(resize(unsigned(I),9));
    I_cast_fu_359_p1 <= std_logic_vector(resize(unsigned(I),13));
    L_read_read_fu_88_p2 <= L;
    N_cast_fu_355_p1 <= std_logic_vector(resize(unsigned(N),9));
    O_cast24_cast_fu_337_p1 <= std_logic_vector(resize(unsigned(O_fu_327_p2),9));
    O_cast25_cast_fu_333_p1 <= std_logic_vector(resize(unsigned(O_fu_327_p2),13));
    O_fu_327_p2 <= std_logic_vector(signed(ap_const_lv5_1E) + signed(tmp_24_fu_323_p1));

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st2_fsm_1, tmp_s_fu_371_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_fu_371_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_s_fu_371_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_s_fu_371_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_101_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_101 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_119 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_130_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_130 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_146_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_146 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_155_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_155 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_179_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_179 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_203_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_203 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_231_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_231 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_246_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_246 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_256_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_256 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_278_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_278 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_29_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_29 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_246)
    begin
        if (ap_sig_246) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_256)
    begin
        if (ap_sig_256) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_278)
    begin
        if (ap_sig_278) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_29)
    begin
        if (ap_sig_29) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_101)
    begin
        if (ap_sig_101) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_119)
    begin
        if (ap_sig_119) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_130)
    begin
        if (ap_sig_130) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_146)
    begin
        if (ap_sig_146) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_155)
    begin
        if (ap_sig_155) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_179)
    begin
        if (ap_sig_179) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_203)
    begin
        if (ap_sig_203) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_231)
    begin
        if (ap_sig_231) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    c_3_fu_505_p2 <= std_logic_vector(unsigned(c_reg_277) + unsigned(ap_const_lv2_1));
    c_cast_fu_495_p1 <= std_logic_vector(resize(unsigned(c_reg_277),5));
    exitcond1_fu_391_p2 <= "1" when (x_reg_183 = O_reg_744) else "0";
    exitcond2_fu_499_p2 <= "1" when (c_reg_277 = ap_const_lv2_3) else "0";
    exitcond3_fu_406_p2 <= "1" when (y_reg_195 = O_reg_744) else "0";
    exitcond_fu_558_p2 <= "1" when (r_reg_312 = ap_const_lv2_3) else "0";
    i_index_fu_680_p2 <= std_logic_vector(unsigned(x_assign_cast_reg_886) + unsigned(tmp7_fu_675_p2));
    input_r_address0 <= tmp_22_fu_685_p1(13 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    m_4_fu_454_p2 <= std_logic_vector(unsigned(m_reg_219) + unsigned(ap_const_lv5_1));
    m_cast_fu_445_p1 <= std_logic_vector(resize(unsigned(m_reg_219),6));
    mac_num_2_fu_664_p3 <= 
        mac_num_1_reg_300 when (sel_tmp1_fu_659_p2(0) = '1') else 
        mac_num_3_fu_647_p2;
    mac_num_3_fu_647_p2 <= std_logic_vector(unsigned(mac_num_1_reg_300) + unsigned(ap_const_lv32_1));
    n_2_fu_376_p2 <= std_logic_vector(unsigned(n_reg_172) + unsigned(ap_const_lv6_1));
    n_cast1_fu_363_p1 <= std_logic_vector(resize(unsigned(n_reg_172),9));
    n_cast_fu_367_p1 <= std_logic_vector(resize(unsigned(n_reg_172),7));
    next_mul4_fu_435_p2 <= std_logic_vector(unsigned(phi_mul3_reg_242) + unsigned(N_cast_reg_776));
    next_mul_fu_440_p2 <= std_logic_vector(unsigned(phi_mul_reg_230) + unsigned(I_cast5_reg_771));
    notlhs_i_fu_527_p2 <= "1" when (unsigned(tmp_i_reg_760) > unsigned(x_assign_fu_511_p2)) else "0";
    notrhs_i_fu_576_p2 <= "0" when (y_assign_fu_570_p2 = ap_const_lv5_0) else "1";
    o_index_fu_431_p2 <= std_logic_vector(unsigned(tmp5_reg_830) + unsigned(x_cast_reg_804));
    one_out_2_fu_710_p2 <= std_logic_vector(unsigned(one_out_1_reg_288) + unsigned(p_pn_fu_706_p1));
    one_out_3_fu_716_p3 <= 
        one_out_1_reg_288 when (sel_tmp1_reg_929(0) = '1') else 
        one_out_2_fu_710_p2;
    or_cond2_i_fu_592_p2 <= (tmp_fu_587_p2 and notrhs_i_fu_576_p2);
    output_r_address0 <= tmp_17_reg_863(13 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= "1" when (signed(sum_reg_207) > signed(tmp_18_fu_723_p1)) else "0";

    output_r_we0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_pn_fu_706_p1 <= std_logic_vector(resize(unsigned(p_pn_in_fu_700_p2),32));
    p_pn_in_fu_700_p2 <= (input_r_q0 xor tmp11_fu_694_p2);
    p_pn_in_in_v_fu_689_p3 <= 
        w_conv2_load_reg_949 when (L(0) = '1') else 
        w_conv1_load_reg_944;
    p_shl1_cast_fu_617_p1 <= std_logic_vector(resize(unsigned(p_shl1_fu_609_p3),5));
    p_shl1_fu_609_p3 <= (r_reg_312 & ap_const_lv2_0);
    p_shl_cast_fu_477_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_469_p3),13));
    p_shl_fu_469_p3 <= (tmp_16_fu_460_p2 & ap_const_lv3_0);
    r_2_fu_564_p2 <= std_logic_vector(unsigned(r_reg_312) + unsigned(ap_const_lv2_1));
    r_cast1_fu_554_p1 <= std_logic_vector(resize(unsigned(r_reg_312),5));
    r_cast_fu_550_p1 <= std_logic_vector(resize(unsigned(r_reg_312),9));
    sel_tmp1_fu_659_p2 <= (tmp_i_26_reg_891 or sel_tmp_fu_653_p2);
    sel_tmp_fu_653_p2 <= (or_cond2_i_fu_592_p2 xor ap_const_lv1_1);
    sum_1_fu_544_p2 <= std_logic_vector(unsigned(tmp_20_fu_538_p2) + unsigned(tmp_30_fu_532_p2));
    threshold_V_address0 <= tmp_17_fu_491_p1(13 - 1 downto 0);

    threshold_V_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            threshold_V_ce0 <= ap_const_logic_1;
        else 
            threshold_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        tmp10_cast_fu_632_p1 <= std_logic_vector(resize(signed(tmp10_fu_627_p2),14));

    tmp10_fu_627_p2 <= std_logic_vector(unsigned(c_cast_reg_873) + unsigned(tmp_21_fu_621_p2));
    tmp11_fu_694_p2 <= (p_pn_in_in_v_fu_689_p3 xor ap_const_lv1_1);
    tmp4_fu_417_p2 <= std_logic_vector(unsigned(y_cast_fu_402_p1) + unsigned(tmp_14_reg_799));
    tmp5_fu_426_p0 <= tmp5_fu_426_p00(9 - 1 downto 0);
    tmp5_fu_426_p00 <= std_logic_vector(resize(unsigned(tmp4_fu_417_p2),13));
    tmp5_fu_426_p1 <= O_cast25_cast_reg_750(5 - 1 downto 0);
    tmp5_fu_426_p2 <= std_logic_vector(resize(unsigned(tmp5_fu_426_p0) * unsigned(tmp5_fu_426_p1), 13));
    tmp6_fu_604_p2 <= std_logic_vector(unsigned(tmp8_fu_598_p2) + unsigned(y_cast_reg_817));
    tmp7_fu_675_p0 <= tmp7_fu_675_p00(9 - 1 downto 0);
    tmp7_fu_675_p00 <= std_logic_vector(resize(unsigned(tmp6_reg_914),13));
    tmp7_fu_675_p1 <= I_cast_reg_781(6 - 1 downto 0);
    tmp7_fu_675_p2 <= std_logic_vector(resize(unsigned(tmp7_fu_675_p0) * unsigned(tmp7_fu_675_p1), 13));
    tmp8_fu_598_p2 <= std_logic_vector(unsigned(phi_mul_reg_230) + unsigned(r_cast_fu_550_p1));
    tmp9_cast_fu_487_p1 <= std_logic_vector(resize(unsigned(tmp9_fu_481_p2),14));
    tmp9_fu_481_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_477_p1) + unsigned(tmp_29_cast1_fu_465_p1));
    tmp_12_i_fu_582_p2 <= "1" when (unsigned(tmp_i_reg_760) > unsigned(y_assign_fu_570_p2)) else "0";
    tmp_14_fu_382_p0 <= tmp_14_fu_382_p00(6 - 1 downto 0);
    tmp_14_fu_382_p00 <= std_logic_vector(resize(unsigned(n_reg_172),9));
    tmp_14_fu_382_p1 <= O_cast24_cast_reg_755(5 - 1 downto 0);
    tmp_14_fu_382_p2 <= std_logic_vector(resize(unsigned(tmp_14_fu_382_p0) * unsigned(tmp_14_fu_382_p1), 9));
    tmp_15_fu_449_p2 <= "1" when (signed(m_cast_fu_445_p1) < signed(tmp_25_reg_766)) else "0";
    tmp_16_fu_460_p2 <= std_logic_vector(unsigned(n_cast1_reg_786) + unsigned(phi_mul3_reg_242));
    tmp_17_fu_491_p1 <= std_logic_vector(resize(unsigned(o_index_reg_835),64));
        tmp_18_fu_723_p1 <= std_logic_vector(resize(signed(threshold_V_q0),32));

    tmp_20_fu_538_p2 <= std_logic_vector(unsigned(sum_reg_207) - unsigned(mac_num_reg_265));
    tmp_21_fu_621_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_617_p1) - unsigned(r_cast1_fu_554_p1));
    tmp_22_fu_685_p1 <= std_logic_vector(resize(unsigned(i_index_reg_939),64));
        tmp_23_fu_641_p1 <= std_logic_vector(resize(signed(w_index_fu_636_p2),64));

    tmp_24_fu_323_p1 <= I(5 - 1 downto 0);
    tmp_25_fu_347_p1 <= M(6 - 1 downto 0);
    tmp_29_cast1_fu_465_p1 <= std_logic_vector(resize(unsigned(tmp_16_fu_460_p2),13));
    tmp_30_fu_532_p2 <= std_logic_vector(shift_left(unsigned(one_out_reg_253),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_fu_587_p2 <= (notlhs_i_reg_896 and tmp_12_i_fu_582_p2);
    tmp_i_26_fu_521_p2 <= "1" when (x_assign_fu_511_p2 = ap_const_lv5_0) else "0";
    tmp_i_fu_341_p2 <= std_logic_vector(signed(ap_const_lv5_1F) + signed(tmp_24_fu_323_p1));
    tmp_s_fu_371_p2 <= "1" when (signed(n_cast_fu_367_p1) < signed(N)) else "0";
    w_conv1_address0 <= tmp_23_fu_641_p1(13 - 1 downto 0);

    w_conv1_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_conv1_ce0 <= ap_const_logic_1;
        else 
            w_conv1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_conv2_address0 <= tmp_23_fu_641_p1(13 - 1 downto 0);

    w_conv2_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            w_conv2_ce0 <= ap_const_logic_1;
        else 
            w_conv2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    w_index_fu_636_p2 <= std_logic_vector(signed(tmp10_cast_fu_632_p1) + signed(tmp9_cast_reg_858));
    x_4_fu_396_p2 <= std_logic_vector(unsigned(x_reg_183) + unsigned(ap_const_lv5_1));
    x_assign_cast_fu_517_p1 <= std_logic_vector(resize(unsigned(x_assign_fu_511_p2),13));
    x_assign_fu_511_p2 <= std_logic_vector(unsigned(c_cast_fu_495_p1) + unsigned(x_reg_183));
    x_cast_fu_387_p1 <= std_logic_vector(resize(unsigned(x_reg_183),13));
    y_4_fu_411_p2 <= std_logic_vector(unsigned(y_reg_195) + unsigned(ap_const_lv5_1));
    y_assign_fu_570_p2 <= std_logic_vector(unsigned(r_cast1_fu_554_p1) + unsigned(y_reg_195));
    y_cast_fu_402_p1 <= std_logic_vector(resize(unsigned(y_reg_195),9));
end behav;
